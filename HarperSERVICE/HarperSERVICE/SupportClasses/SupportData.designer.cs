#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SupportClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="AHT_Main")]
	public partial class SupportDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppEventLog(AppEventLog instance);
    partial void UpdateAppEventLog(AppEventLog instance);
    partial void DeleteAppEventLog(AppEventLog instance);
    partial void InsertWebEventLog(WebEventLog instance);
    partial void UpdateWebEventLog(WebEventLog instance);
    partial void DeleteWebEventLog(WebEventLog instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertAddressCustomer(AddressCustomer instance);
    partial void UpdateAddressCustomer(AddressCustomer instance);
    partial void DeleteAddressCustomer(AddressCustomer instance);
    partial void InsertNetMembership(NetMembership instance);
    partial void UpdateNetMembership(NetMembership instance);
    partial void DeleteNetMembership(NetMembership instance);
    partial void InsertMembershipType(MembershipType instance);
    partial void UpdateMembershipType(MembershipType instance);
    partial void DeleteMembershipType(MembershipType instance);
    #endregion
		
		public SupportDataDataContext() : 
				base(global::SupportClasses.Properties.Settings.Default.AHT_MainConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SupportDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupportDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupportDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupportDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AppEventLog> AppEventLogs
		{
			get
			{
				return this.GetTable<AppEventLog>();
			}
		}
		
		public System.Data.Linq.Table<WebEventLog> WebEventLogs
		{
			get
			{
				return this.GetTable<WebEventLog>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<AddressCustomer> AddressCustomers
		{
			get
			{
				return this.GetTable<AddressCustomer>();
			}
		}
		
		public System.Data.Linq.Table<NetMembership> NetMemberships
		{
			get
			{
				return this.GetTable<NetMembership>();
			}
		}
		
		public System.Data.Linq.Table<MembershipType> MembershipTypes
		{
			get
			{
				return this.GetTable<MembershipType>();
			}
		}
		
		public System.Data.Linq.Table<SFG_CustomerNumber> SFG_CustomerNumbers
		{
			get
			{
				return this.GetTable<SFG_CustomerNumber>();
			}
		}
		
		public System.Data.Linq.Table<SFG_ProdCode> SFG_ProdCodes
		{
			get
			{
				return this.GetTable<SFG_ProdCode>();
			}
		}
	}
	
	[Table(Name="dbo.tbl_AppEventLog")]
	public partial class AppEventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _aelID;
		
		private string _aelUserName;
		
		private string _aelAppName;
		
		private string _aelEvent;
		
		private string _aelMessage1;
		
		private string _aelMessage2;
		
		private string _aelMessage3;
		
		private System.Nullable<System.DateTime> _aelDateCreated;
		
		private string _aelSeverity;
		
		private string _aelSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnMessage1Changing(string value);
    partial void OnMessage1Changed();
    partial void OnMessage2Changing(string value);
    partial void OnMessage2Changed();
    partial void OnMessage3Changing(string value);
    partial void OnMessage3Changed();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnSeverityChanging(string value);
    partial void OnSeverityChanged();
    partial void OnSectionChanging(string value);
    partial void OnSectionChanged();
    #endregion
		
		public AppEventLog()
		{
			OnCreated();
		}
		
		[Column(Name="aelID", Storage="_aelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._aelID;
			}
			set
			{
				if ((this._aelID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._aelID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="aelUserName", Storage="_aelUserName", DbType="VarChar(64)")]
		public string UserName
		{
			get
			{
				return this._aelUserName;
			}
			set
			{
				if ((this._aelUserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._aelUserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Name="aelAppName", Storage="_aelAppName", DbType="VarChar(64)")]
		public string AppName
		{
			get
			{
				return this._aelAppName;
			}
			set
			{
				if ((this._aelAppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._aelAppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[Column(Name="aelEvent", Storage="_aelEvent", DbType="VarChar(25)")]
		public string Event
		{
			get
			{
				return this._aelEvent;
			}
			set
			{
				if ((this._aelEvent != value))
				{
					this.OnEventChanging(value);
					this.SendPropertyChanging();
					this._aelEvent = value;
					this.SendPropertyChanged("Event");
					this.OnEventChanged();
				}
			}
		}
		
		[Column(Name="aelMessage1", Storage="_aelMessage1", DbType="VarChar(MAX)")]
		public string Message1
		{
			get
			{
				return this._aelMessage1;
			}
			set
			{
				if ((this._aelMessage1 != value))
				{
					this.OnMessage1Changing(value);
					this.SendPropertyChanging();
					this._aelMessage1 = value;
					this.SendPropertyChanged("Message1");
					this.OnMessage1Changed();
				}
			}
		}
		
		[Column(Name="aelMessage2", Storage="_aelMessage2", DbType="VarChar(MAX)")]
		public string Message2
		{
			get
			{
				return this._aelMessage2;
			}
			set
			{
				if ((this._aelMessage2 != value))
				{
					this.OnMessage2Changing(value);
					this.SendPropertyChanging();
					this._aelMessage2 = value;
					this.SendPropertyChanged("Message2");
					this.OnMessage2Changed();
				}
			}
		}
		
		[Column(Name="aelMessage3", Storage="_aelMessage3", DbType="VarChar(MAX)")]
		public string Message3
		{
			get
			{
				return this._aelMessage3;
			}
			set
			{
				if ((this._aelMessage3 != value))
				{
					this.OnMessage3Changing(value);
					this.SendPropertyChanging();
					this._aelMessage3 = value;
					this.SendPropertyChanged("Message3");
					this.OnMessage3Changed();
				}
			}
		}
		
		[Column(Name="aelDateCreated", Storage="_aelDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._aelDateCreated;
			}
			set
			{
				if ((this._aelDateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._aelDateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Name="aelSeverity", Storage="_aelSeverity", DbType="VarChar(10)")]
		public string Severity
		{
			get
			{
				return this._aelSeverity;
			}
			set
			{
				if ((this._aelSeverity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._aelSeverity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[Column(Name="aelSection", Storage="_aelSection", DbType="VarChar(255)")]
		public string Section
		{
			get
			{
				return this._aelSection;
			}
			set
			{
				if ((this._aelSection != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._aelSection = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_WebEventLog")]
	public partial class WebEventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _welID;
		
		private string _welUserName;
		
		private string _welEvent;
		
		private string _welEventDesc;
		
		private System.DateTime _welDateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwelIDChanging(int value);
    partial void OnwelIDChanged();
    partial void OnwelUserNameChanging(string value);
    partial void OnwelUserNameChanged();
    partial void OnwelEventChanging(string value);
    partial void OnwelEventChanged();
    partial void OnwelEventDescChanging(string value);
    partial void OnwelEventDescChanged();
    partial void OnwelDateCreatedChanging(System.DateTime value);
    partial void OnwelDateCreatedChanged();
    #endregion
		
		public WebEventLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_welID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int welID
		{
			get
			{
				return this._welID;
			}
			set
			{
				if ((this._welID != value))
				{
					this.OnwelIDChanging(value);
					this.SendPropertyChanging();
					this._welID = value;
					this.SendPropertyChanged("welID");
					this.OnwelIDChanged();
				}
			}
		}
		
		[Column(Storage="_welUserName", DbType="NVarChar(64)")]
		public string welUserName
		{
			get
			{
				return this._welUserName;
			}
			set
			{
				if ((this._welUserName != value))
				{
					this.OnwelUserNameChanging(value);
					this.SendPropertyChanging();
					this._welUserName = value;
					this.SendPropertyChanged("welUserName");
					this.OnwelUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_welEvent", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string welEvent
		{
			get
			{
				return this._welEvent;
			}
			set
			{
				if ((this._welEvent != value))
				{
					this.OnwelEventChanging(value);
					this.SendPropertyChanging();
					this._welEvent = value;
					this.SendPropertyChanged("welEvent");
					this.OnwelEventChanged();
				}
			}
		}
		
		[Column(Storage="_welEventDesc", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string welEventDesc
		{
			get
			{
				return this._welEventDesc;
			}
			set
			{
				if ((this._welEventDesc != value))
				{
					this.OnwelEventDescChanging(value);
					this.SendPropertyChanging();
					this._welEventDesc = value;
					this.SendPropertyChanged("welEventDesc");
					this.OnwelEventDescChanged();
				}
			}
		}
		
		[Column(Storage="_welDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime welDateCreated
		{
			get
			{
				return this._welDateCreated;
			}
			set
			{
				if ((this._welDateCreated != value))
				{
					this.OnwelDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._welDateCreated = value;
					this.SendPropertyChanged("welDateCreated");
					this.OnwelDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cusID;
		
		private string _cusCustNum;
		
		private string _cusQuickFillCustNum;
		
		private string _cusSecNum;
		
		private string _cusCustType;
		
		private string _cusFirstName;
		
		private string _cusLastName;
		
		private string _cusPAFirstName;
		
		private string _cusPALastName;
		
		private string _cusPAPhone1;
		
		private string _cusPAPhone1Ext;
		
		private string _cusCompany;
		
		private int _addID;
		
		private System.Nullable<int> _addSeasonID;
		
		private System.Nullable<System.DateTime> _cusSeasonStart;
		
		private System.Nullable<System.DateTime> _cusSeasonEnd;
		
		private System.Nullable<int> _addAltAdd1ID;
		
		private string _cusPrefix;
		
		private string _cusSuffix;
		
		private string _cusTitle;
		
		private string _cusDepartment;
		
		private string _cusPhone1;
		
		private string _cusPhone1Ext;
		
		private string _cusPhone2;
		
		private string _cusPhone2Ext;
		
		private string _cusMobile;
		
		private string _cusFax;
		
		private string _cusEmail;
		
		private string _cusUserName;
		
		private bool _cusIsCharterMem;
		
		private System.Nullable<System.DateTime> _cusNextQClubCardDate;
		
		private string _cusSource;
		
		private string _cusTempID;
		
		private string _cusSecQClubCardName;
		
		private string _cusUserLastUpdated;
		
		private System.DateTime _cusDateCreated;
		
		private System.DateTime _cusDateUpdated;
		
		private bool _cusIsDeleted;
		
		private string _cusPriFirstName;
		
		private string _cusPriLastName;
		
		private string _cusNickname;
		
		private char _cusSex;
		
		private System.Nullable<System.DateTime> _cusDOB;
		
		private string _cusDisplayName;
		
		private System.Guid _cusGUID;
		
		private bool _cusHasDisplayName;
		
		private System.Nullable<System.DateTime> _cusDisplayNameUpdated;
		
		private string _cusAffiliation;
		
		private System.Nullable<System.DateTime> _cusMemberSince;
		
		private string _cusAppStatus;
		
		private string _cusComplimentsOf;
		
		private string _cusTrialCardName;
		
		private string _cusEncryptedPassword;
		
		private string _cusPasswordSalt;
		
		private EntitySet<NetMembership> _NetMemberships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusIDChanging(int value);
    partial void OncusIDChanged();
    partial void OncusCustNumChanging(string value);
    partial void OncusCustNumChanged();
    partial void OncusQuickFillCustNumChanging(string value);
    partial void OncusQuickFillCustNumChanged();
    partial void OncusSecNumChanging(string value);
    partial void OncusSecNumChanged();
    partial void OncusCustTypeChanging(string value);
    partial void OncusCustTypeChanged();
    partial void OncusFirstNameChanging(string value);
    partial void OncusFirstNameChanged();
    partial void OncusLastNameChanging(string value);
    partial void OncusLastNameChanged();
    partial void OncusPAFirstNameChanging(string value);
    partial void OncusPAFirstNameChanged();
    partial void OncusPALastNameChanging(string value);
    partial void OncusPALastNameChanged();
    partial void OncusPAPhone1Changing(string value);
    partial void OncusPAPhone1Changed();
    partial void OncusPAPhone1ExtChanging(string value);
    partial void OncusPAPhone1ExtChanged();
    partial void OncusCompanyChanging(string value);
    partial void OncusCompanyChanged();
    partial void OnaddIDChanging(int value);
    partial void OnaddIDChanged();
    partial void OnaddSeasonIDChanging(System.Nullable<int> value);
    partial void OnaddSeasonIDChanged();
    partial void OncusSeasonStartChanging(System.Nullable<System.DateTime> value);
    partial void OncusSeasonStartChanged();
    partial void OncusSeasonEndChanging(System.Nullable<System.DateTime> value);
    partial void OncusSeasonEndChanged();
    partial void OnaddAltAdd1IDChanging(System.Nullable<int> value);
    partial void OnaddAltAdd1IDChanged();
    partial void OncusPrefixChanging(string value);
    partial void OncusPrefixChanged();
    partial void OncusSuffixChanging(string value);
    partial void OncusSuffixChanged();
    partial void OncusTitleChanging(string value);
    partial void OncusTitleChanged();
    partial void OncusDepartmentChanging(string value);
    partial void OncusDepartmentChanged();
    partial void OncusPhone1Changing(string value);
    partial void OncusPhone1Changed();
    partial void OncusPhone1ExtChanging(string value);
    partial void OncusPhone1ExtChanged();
    partial void OncusPhone2Changing(string value);
    partial void OncusPhone2Changed();
    partial void OncusPhone2ExtChanging(string value);
    partial void OncusPhone2ExtChanged();
    partial void OncusMobileChanging(string value);
    partial void OncusMobileChanged();
    partial void OncusFaxChanging(string value);
    partial void OncusFaxChanged();
    partial void OncusEmailChanging(string value);
    partial void OncusEmailChanged();
    partial void OncusUserNameChanging(string value);
    partial void OncusUserNameChanged();
    partial void OncusIsCharterMemChanging(bool value);
    partial void OncusIsCharterMemChanged();
    partial void OncusNextQClubCardDateChanging(System.Nullable<System.DateTime> value);
    partial void OncusNextQClubCardDateChanged();
    partial void OncusSourceChanging(string value);
    partial void OncusSourceChanged();
    partial void OncusTempIDChanging(string value);
    partial void OncusTempIDChanged();
    partial void OncusSecQClubCardNameChanging(string value);
    partial void OncusSecQClubCardNameChanged();
    partial void OncusUserLastUpdatedChanging(string value);
    partial void OncusUserLastUpdatedChanged();
    partial void OncusDateCreatedChanging(System.DateTime value);
    partial void OncusDateCreatedChanged();
    partial void OncusDateUpdatedChanging(System.DateTime value);
    partial void OncusDateUpdatedChanged();
    partial void OncusIsDeletedChanging(bool value);
    partial void OncusIsDeletedChanged();
    partial void OncusPriFirstNameChanging(string value);
    partial void OncusPriFirstNameChanged();
    partial void OncusPriLastNameChanging(string value);
    partial void OncusPriLastNameChanged();
    partial void OncusNicknameChanging(string value);
    partial void OncusNicknameChanged();
    partial void OncusSexChanging(char value);
    partial void OncusSexChanged();
    partial void OncusDOBChanging(System.Nullable<System.DateTime> value);
    partial void OncusDOBChanged();
    partial void OncusDisplayNameChanging(string value);
    partial void OncusDisplayNameChanged();
    partial void OncusGUIDChanging(System.Guid value);
    partial void OncusGUIDChanged();
    partial void OncusHasDisplayNameChanging(bool value);
    partial void OncusHasDisplayNameChanged();
    partial void OncusDisplayNameUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OncusDisplayNameUpdatedChanged();
    partial void OncusAffiliationChanging(string value);
    partial void OncusAffiliationChanged();
    partial void OncusMemberSinceChanging(System.Nullable<System.DateTime> value);
    partial void OncusMemberSinceChanged();
    partial void OncusAppStatusChanging(string value);
    partial void OncusAppStatusChanged();
    partial void OncusComplimentsOfChanging(string value);
    partial void OncusComplimentsOfChanged();
    partial void OncusTrialCardNameChanging(string value);
    partial void OncusTrialCardNameChanged();
    partial void OncusEncryptedPasswordChanging(string value);
    partial void OncusEncryptedPasswordChanged();
    partial void OncusPasswordSaltChanging(string value);
    partial void OncusPasswordSaltChanged();
    #endregion
		
		public Customer()
		{
			this._NetMemberships = new EntitySet<NetMembership>(new Action<NetMembership>(this.attach_NetMemberships), new Action<NetMembership>(this.detach_NetMemberships));
			OnCreated();
		}
		
		[Column(Storage="_cusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cusID
		{
			get
			{
				return this._cusID;
			}
			set
			{
				if ((this._cusID != value))
				{
					this.OncusIDChanging(value);
					this.SendPropertyChanging();
					this._cusID = value;
					this.SendPropertyChanged("cusID");
					this.OncusIDChanged();
				}
			}
		}
		
		[Column(Storage="_cusCustNum", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string cusCustNum
		{
			get
			{
				return this._cusCustNum;
			}
			set
			{
				if ((this._cusCustNum != value))
				{
					this.OncusCustNumChanging(value);
					this.SendPropertyChanging();
					this._cusCustNum = value;
					this.SendPropertyChanged("cusCustNum");
					this.OncusCustNumChanged();
				}
			}
		}
		
		[Column(Storage="_cusQuickFillCustNum", DbType="NVarChar(32)")]
		public string cusQuickFillCustNum
		{
			get
			{
				return this._cusQuickFillCustNum;
			}
			set
			{
				if ((this._cusQuickFillCustNum != value))
				{
					this.OncusQuickFillCustNumChanging(value);
					this.SendPropertyChanging();
					this._cusQuickFillCustNum = value;
					this.SendPropertyChanged("cusQuickFillCustNum");
					this.OncusQuickFillCustNumChanged();
				}
			}
		}
		
		[Column(Storage="_cusSecNum", DbType="VarChar(32)")]
		public string cusSecNum
		{
			get
			{
				return this._cusSecNum;
			}
			set
			{
				if ((this._cusSecNum != value))
				{
					this.OncusSecNumChanging(value);
					this.SendPropertyChanging();
					this._cusSecNum = value;
					this.SendPropertyChanged("cusSecNum");
					this.OncusSecNumChanged();
				}
			}
		}
		
		[Column(Storage="_cusCustType", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string cusCustType
		{
			get
			{
				return this._cusCustType;
			}
			set
			{
				if ((this._cusCustType != value))
				{
					this.OncusCustTypeChanging(value);
					this.SendPropertyChanging();
					this._cusCustType = value;
					this.SendPropertyChanged("cusCustType");
					this.OncusCustTypeChanged();
				}
			}
		}
		
		[Column(Storage="_cusFirstName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string cusFirstName
		{
			get
			{
				return this._cusFirstName;
			}
			set
			{
				if ((this._cusFirstName != value))
				{
					this.OncusFirstNameChanging(value);
					this.SendPropertyChanging();
					this._cusFirstName = value;
					this.SendPropertyChanged("cusFirstName");
					this.OncusFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusLastName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string cusLastName
		{
			get
			{
				return this._cusLastName;
			}
			set
			{
				if ((this._cusLastName != value))
				{
					this.OncusLastNameChanging(value);
					this.SendPropertyChanging();
					this._cusLastName = value;
					this.SendPropertyChanged("cusLastName");
					this.OncusLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusPAFirstName", DbType="NVarChar(64)")]
		public string cusPAFirstName
		{
			get
			{
				return this._cusPAFirstName;
			}
			set
			{
				if ((this._cusPAFirstName != value))
				{
					this.OncusPAFirstNameChanging(value);
					this.SendPropertyChanging();
					this._cusPAFirstName = value;
					this.SendPropertyChanged("cusPAFirstName");
					this.OncusPAFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusPALastName", DbType="NVarChar(64)")]
		public string cusPALastName
		{
			get
			{
				return this._cusPALastName;
			}
			set
			{
				if ((this._cusPALastName != value))
				{
					this.OncusPALastNameChanging(value);
					this.SendPropertyChanging();
					this._cusPALastName = value;
					this.SendPropertyChanged("cusPALastName");
					this.OncusPALastNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusPAPhone1", DbType="NVarChar(32)")]
		public string cusPAPhone1
		{
			get
			{
				return this._cusPAPhone1;
			}
			set
			{
				if ((this._cusPAPhone1 != value))
				{
					this.OncusPAPhone1Changing(value);
					this.SendPropertyChanging();
					this._cusPAPhone1 = value;
					this.SendPropertyChanged("cusPAPhone1");
					this.OncusPAPhone1Changed();
				}
			}
		}
		
		[Column(Storage="_cusPAPhone1Ext", DbType="NVarChar(32)")]
		public string cusPAPhone1Ext
		{
			get
			{
				return this._cusPAPhone1Ext;
			}
			set
			{
				if ((this._cusPAPhone1Ext != value))
				{
					this.OncusPAPhone1ExtChanging(value);
					this.SendPropertyChanging();
					this._cusPAPhone1Ext = value;
					this.SendPropertyChanged("cusPAPhone1Ext");
					this.OncusPAPhone1ExtChanged();
				}
			}
		}
		
		[Column(Storage="_cusCompany", DbType="NVarChar(64)")]
		public string cusCompany
		{
			get
			{
				return this._cusCompany;
			}
			set
			{
				if ((this._cusCompany != value))
				{
					this.OncusCompanyChanging(value);
					this.SendPropertyChanging();
					this._cusCompany = value;
					this.SendPropertyChanged("cusCompany");
					this.OncusCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_addID", DbType="Int NOT NULL")]
		public int addID
		{
			get
			{
				return this._addID;
			}
			set
			{
				if ((this._addID != value))
				{
					this.OnaddIDChanging(value);
					this.SendPropertyChanging();
					this._addID = value;
					this.SendPropertyChanged("addID");
					this.OnaddIDChanged();
				}
			}
		}
		
		[Column(Storage="_addSeasonID", DbType="Int")]
		public System.Nullable<int> addSeasonID
		{
			get
			{
				return this._addSeasonID;
			}
			set
			{
				if ((this._addSeasonID != value))
				{
					this.OnaddSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._addSeasonID = value;
					this.SendPropertyChanged("addSeasonID");
					this.OnaddSeasonIDChanged();
				}
			}
		}
		
		[Column(Storage="_cusSeasonStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusSeasonStart
		{
			get
			{
				return this._cusSeasonStart;
			}
			set
			{
				if ((this._cusSeasonStart != value))
				{
					this.OncusSeasonStartChanging(value);
					this.SendPropertyChanging();
					this._cusSeasonStart = value;
					this.SendPropertyChanged("cusSeasonStart");
					this.OncusSeasonStartChanged();
				}
			}
		}
		
		[Column(Storage="_cusSeasonEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusSeasonEnd
		{
			get
			{
				return this._cusSeasonEnd;
			}
			set
			{
				if ((this._cusSeasonEnd != value))
				{
					this.OncusSeasonEndChanging(value);
					this.SendPropertyChanging();
					this._cusSeasonEnd = value;
					this.SendPropertyChanged("cusSeasonEnd");
					this.OncusSeasonEndChanged();
				}
			}
		}
		
		[Column(Storage="_addAltAdd1ID", DbType="Int")]
		public System.Nullable<int> addAltAdd1ID
		{
			get
			{
				return this._addAltAdd1ID;
			}
			set
			{
				if ((this._addAltAdd1ID != value))
				{
					this.OnaddAltAdd1IDChanging(value);
					this.SendPropertyChanging();
					this._addAltAdd1ID = value;
					this.SendPropertyChanged("addAltAdd1ID");
					this.OnaddAltAdd1IDChanged();
				}
			}
		}
		
		[Column(Storage="_cusPrefix", DbType="NVarChar(16)")]
		public string cusPrefix
		{
			get
			{
				return this._cusPrefix;
			}
			set
			{
				if ((this._cusPrefix != value))
				{
					this.OncusPrefixChanging(value);
					this.SendPropertyChanging();
					this._cusPrefix = value;
					this.SendPropertyChanged("cusPrefix");
					this.OncusPrefixChanged();
				}
			}
		}
		
		[Column(Storage="_cusSuffix", DbType="NVarChar(16)")]
		public string cusSuffix
		{
			get
			{
				return this._cusSuffix;
			}
			set
			{
				if ((this._cusSuffix != value))
				{
					this.OncusSuffixChanging(value);
					this.SendPropertyChanging();
					this._cusSuffix = value;
					this.SendPropertyChanged("cusSuffix");
					this.OncusSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_cusTitle", DbType="NVarChar(64)")]
		public string cusTitle
		{
			get
			{
				return this._cusTitle;
			}
			set
			{
				if ((this._cusTitle != value))
				{
					this.OncusTitleChanging(value);
					this.SendPropertyChanging();
					this._cusTitle = value;
					this.SendPropertyChanged("cusTitle");
					this.OncusTitleChanged();
				}
			}
		}
		
		[Column(Storage="_cusDepartment", DbType="NVarChar(64)")]
		public string cusDepartment
		{
			get
			{
				return this._cusDepartment;
			}
			set
			{
				if ((this._cusDepartment != value))
				{
					this.OncusDepartmentChanging(value);
					this.SendPropertyChanging();
					this._cusDepartment = value;
					this.SendPropertyChanged("cusDepartment");
					this.OncusDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_cusPhone1", DbType="NVarChar(32)")]
		public string cusPhone1
		{
			get
			{
				return this._cusPhone1;
			}
			set
			{
				if ((this._cusPhone1 != value))
				{
					this.OncusPhone1Changing(value);
					this.SendPropertyChanging();
					this._cusPhone1 = value;
					this.SendPropertyChanged("cusPhone1");
					this.OncusPhone1Changed();
				}
			}
		}
		
		[Column(Storage="_cusPhone1Ext", DbType="NVarChar(32)")]
		public string cusPhone1Ext
		{
			get
			{
				return this._cusPhone1Ext;
			}
			set
			{
				if ((this._cusPhone1Ext != value))
				{
					this.OncusPhone1ExtChanging(value);
					this.SendPropertyChanging();
					this._cusPhone1Ext = value;
					this.SendPropertyChanged("cusPhone1Ext");
					this.OncusPhone1ExtChanged();
				}
			}
		}
		
		[Column(Storage="_cusPhone2", DbType="NVarChar(32)")]
		public string cusPhone2
		{
			get
			{
				return this._cusPhone2;
			}
			set
			{
				if ((this._cusPhone2 != value))
				{
					this.OncusPhone2Changing(value);
					this.SendPropertyChanging();
					this._cusPhone2 = value;
					this.SendPropertyChanged("cusPhone2");
					this.OncusPhone2Changed();
				}
			}
		}
		
		[Column(Storage="_cusPhone2Ext", DbType="NVarChar(32)")]
		public string cusPhone2Ext
		{
			get
			{
				return this._cusPhone2Ext;
			}
			set
			{
				if ((this._cusPhone2Ext != value))
				{
					this.OncusPhone2ExtChanging(value);
					this.SendPropertyChanging();
					this._cusPhone2Ext = value;
					this.SendPropertyChanged("cusPhone2Ext");
					this.OncusPhone2ExtChanged();
				}
			}
		}
		
		[Column(Storage="_cusMobile", DbType="NVarChar(32)")]
		public string cusMobile
		{
			get
			{
				return this._cusMobile;
			}
			set
			{
				if ((this._cusMobile != value))
				{
					this.OncusMobileChanging(value);
					this.SendPropertyChanging();
					this._cusMobile = value;
					this.SendPropertyChanged("cusMobile");
					this.OncusMobileChanged();
				}
			}
		}
		
		[Column(Storage="_cusFax", DbType="NVarChar(32)")]
		public string cusFax
		{
			get
			{
				return this._cusFax;
			}
			set
			{
				if ((this._cusFax != value))
				{
					this.OncusFaxChanging(value);
					this.SendPropertyChanging();
					this._cusFax = value;
					this.SendPropertyChanged("cusFax");
					this.OncusFaxChanged();
				}
			}
		}
		
		[Column(Storage="_cusEmail", DbType="NVarChar(64)")]
		public string cusEmail
		{
			get
			{
				return this._cusEmail;
			}
			set
			{
				if ((this._cusEmail != value))
				{
					this.OncusEmailChanging(value);
					this.SendPropertyChanging();
					this._cusEmail = value;
					this.SendPropertyChanged("cusEmail");
					this.OncusEmailChanged();
				}
			}
		}
		
		[Column(Storage="_cusUserName", DbType="NVarChar(64)")]
		public string cusUserName
		{
			get
			{
				return this._cusUserName;
			}
			set
			{
				if ((this._cusUserName != value))
				{
					this.OncusUserNameChanging(value);
					this.SendPropertyChanging();
					this._cusUserName = value;
					this.SendPropertyChanged("cusUserName");
					this.OncusUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusIsCharterMem", DbType="Bit NOT NULL")]
		public bool cusIsCharterMem
		{
			get
			{
				return this._cusIsCharterMem;
			}
			set
			{
				if ((this._cusIsCharterMem != value))
				{
					this.OncusIsCharterMemChanging(value);
					this.SendPropertyChanging();
					this._cusIsCharterMem = value;
					this.SendPropertyChanged("cusIsCharterMem");
					this.OncusIsCharterMemChanged();
				}
			}
		}
		
		[Column(Storage="_cusNextQClubCardDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusNextQClubCardDate
		{
			get
			{
				return this._cusNextQClubCardDate;
			}
			set
			{
				if ((this._cusNextQClubCardDate != value))
				{
					this.OncusNextQClubCardDateChanging(value);
					this.SendPropertyChanging();
					this._cusNextQClubCardDate = value;
					this.SendPropertyChanged("cusNextQClubCardDate");
					this.OncusNextQClubCardDateChanged();
				}
			}
		}
		
		[Column(Storage="_cusSource", DbType="VarChar(16)")]
		public string cusSource
		{
			get
			{
				return this._cusSource;
			}
			set
			{
				if ((this._cusSource != value))
				{
					this.OncusSourceChanging(value);
					this.SendPropertyChanging();
					this._cusSource = value;
					this.SendPropertyChanged("cusSource");
					this.OncusSourceChanged();
				}
			}
		}
		
		[Column(Storage="_cusTempID", DbType="VarChar(32)")]
		public string cusTempID
		{
			get
			{
				return this._cusTempID;
			}
			set
			{
				if ((this._cusTempID != value))
				{
					this.OncusTempIDChanging(value);
					this.SendPropertyChanging();
					this._cusTempID = value;
					this.SendPropertyChanged("cusTempID");
					this.OncusTempIDChanged();
				}
			}
		}
		
		[Column(Storage="_cusSecQClubCardName", DbType="NVarChar(64)")]
		public string cusSecQClubCardName
		{
			get
			{
				return this._cusSecQClubCardName;
			}
			set
			{
				if ((this._cusSecQClubCardName != value))
				{
					this.OncusSecQClubCardNameChanging(value);
					this.SendPropertyChanging();
					this._cusSecQClubCardName = value;
					this.SendPropertyChanged("cusSecQClubCardName");
					this.OncusSecQClubCardNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusUserLastUpdated", DbType="NVarChar(64)")]
		public string cusUserLastUpdated
		{
			get
			{
				return this._cusUserLastUpdated;
			}
			set
			{
				if ((this._cusUserLastUpdated != value))
				{
					this.OncusUserLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._cusUserLastUpdated = value;
					this.SendPropertyChanged("cusUserLastUpdated");
					this.OncusUserLastUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_cusDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime cusDateCreated
		{
			get
			{
				return this._cusDateCreated;
			}
			set
			{
				if ((this._cusDateCreated != value))
				{
					this.OncusDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._cusDateCreated = value;
					this.SendPropertyChanged("cusDateCreated");
					this.OncusDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_cusDateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime cusDateUpdated
		{
			get
			{
				return this._cusDateUpdated;
			}
			set
			{
				if ((this._cusDateUpdated != value))
				{
					this.OncusDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._cusDateUpdated = value;
					this.SendPropertyChanged("cusDateUpdated");
					this.OncusDateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_cusIsDeleted", DbType="Bit NOT NULL")]
		public bool cusIsDeleted
		{
			get
			{
				return this._cusIsDeleted;
			}
			set
			{
				if ((this._cusIsDeleted != value))
				{
					this.OncusIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._cusIsDeleted = value;
					this.SendPropertyChanged("cusIsDeleted");
					this.OncusIsDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_cusPriFirstName", DbType="NVarChar(64)")]
		public string cusPriFirstName
		{
			get
			{
				return this._cusPriFirstName;
			}
			set
			{
				if ((this._cusPriFirstName != value))
				{
					this.OncusPriFirstNameChanging(value);
					this.SendPropertyChanging();
					this._cusPriFirstName = value;
					this.SendPropertyChanged("cusPriFirstName");
					this.OncusPriFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusPriLastName", DbType="NVarChar(64)")]
		public string cusPriLastName
		{
			get
			{
				return this._cusPriLastName;
			}
			set
			{
				if ((this._cusPriLastName != value))
				{
					this.OncusPriLastNameChanging(value);
					this.SendPropertyChanging();
					this._cusPriLastName = value;
					this.SendPropertyChanged("cusPriLastName");
					this.OncusPriLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusNickname", DbType="NVarChar(64)")]
		public string cusNickname
		{
			get
			{
				return this._cusNickname;
			}
			set
			{
				if ((this._cusNickname != value))
				{
					this.OncusNicknameChanging(value);
					this.SendPropertyChanging();
					this._cusNickname = value;
					this.SendPropertyChanged("cusNickname");
					this.OncusNicknameChanged();
				}
			}
		}
		
		[Column(Storage="_cusSex", DbType="Char(1) NOT NULL")]
		public char cusSex
		{
			get
			{
				return this._cusSex;
			}
			set
			{
				if ((this._cusSex != value))
				{
					this.OncusSexChanging(value);
					this.SendPropertyChanging();
					this._cusSex = value;
					this.SendPropertyChanged("cusSex");
					this.OncusSexChanged();
				}
			}
		}
		
		[Column(Storage="_cusDOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusDOB
		{
			get
			{
				return this._cusDOB;
			}
			set
			{
				if ((this._cusDOB != value))
				{
					this.OncusDOBChanging(value);
					this.SendPropertyChanging();
					this._cusDOB = value;
					this.SendPropertyChanged("cusDOB");
					this.OncusDOBChanged();
				}
			}
		}
		
		[Column(Storage="_cusDisplayName", DbType="NVarChar(64)")]
		public string cusDisplayName
		{
			get
			{
				return this._cusDisplayName;
			}
			set
			{
				if ((this._cusDisplayName != value))
				{
					this.OncusDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._cusDisplayName = value;
					this.SendPropertyChanged("cusDisplayName");
					this.OncusDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cusGUID
		{
			get
			{
				return this._cusGUID;
			}
			set
			{
				if ((this._cusGUID != value))
				{
					this.OncusGUIDChanging(value);
					this.SendPropertyChanging();
					this._cusGUID = value;
					this.SendPropertyChanged("cusGUID");
					this.OncusGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_cusHasDisplayName", DbType="Bit NOT NULL")]
		public bool cusHasDisplayName
		{
			get
			{
				return this._cusHasDisplayName;
			}
			set
			{
				if ((this._cusHasDisplayName != value))
				{
					this.OncusHasDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._cusHasDisplayName = value;
					this.SendPropertyChanged("cusHasDisplayName");
					this.OncusHasDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusDisplayNameUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusDisplayNameUpdated
		{
			get
			{
				return this._cusDisplayNameUpdated;
			}
			set
			{
				if ((this._cusDisplayNameUpdated != value))
				{
					this.OncusDisplayNameUpdatedChanging(value);
					this.SendPropertyChanging();
					this._cusDisplayNameUpdated = value;
					this.SendPropertyChanged("cusDisplayNameUpdated");
					this.OncusDisplayNameUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_cusAffiliation", DbType="NVarChar(50)")]
		public string cusAffiliation
		{
			get
			{
				return this._cusAffiliation;
			}
			set
			{
				if ((this._cusAffiliation != value))
				{
					this.OncusAffiliationChanging(value);
					this.SendPropertyChanging();
					this._cusAffiliation = value;
					this.SendPropertyChanged("cusAffiliation");
					this.OncusAffiliationChanged();
				}
			}
		}
		
		[Column(Storage="_cusMemberSince", DbType="DateTime")]
		public System.Nullable<System.DateTime> cusMemberSince
		{
			get
			{
				return this._cusMemberSince;
			}
			set
			{
				if ((this._cusMemberSince != value))
				{
					this.OncusMemberSinceChanging(value);
					this.SendPropertyChanging();
					this._cusMemberSince = value;
					this.SendPropertyChanged("cusMemberSince");
					this.OncusMemberSinceChanged();
				}
			}
		}
		
		[Column(Storage="_cusAppStatus", DbType="NVarChar(50)")]
		public string cusAppStatus
		{
			get
			{
				return this._cusAppStatus;
			}
			set
			{
				if ((this._cusAppStatus != value))
				{
					this.OncusAppStatusChanging(value);
					this.SendPropertyChanging();
					this._cusAppStatus = value;
					this.SendPropertyChanged("cusAppStatus");
					this.OncusAppStatusChanged();
				}
			}
		}
		
		[Column(Storage="_cusComplimentsOf", DbType="NVarChar(64)")]
		public string cusComplimentsOf
		{
			get
			{
				return this._cusComplimentsOf;
			}
			set
			{
				if ((this._cusComplimentsOf != value))
				{
					this.OncusComplimentsOfChanging(value);
					this.SendPropertyChanging();
					this._cusComplimentsOf = value;
					this.SendPropertyChanged("cusComplimentsOf");
					this.OncusComplimentsOfChanged();
				}
			}
		}
		
		[Column(Storage="_cusTrialCardName", DbType="NVarChar(100)")]
		public string cusTrialCardName
		{
			get
			{
				return this._cusTrialCardName;
			}
			set
			{
				if ((this._cusTrialCardName != value))
				{
					this.OncusTrialCardNameChanging(value);
					this.SendPropertyChanging();
					this._cusTrialCardName = value;
					this.SendPropertyChanged("cusTrialCardName");
					this.OncusTrialCardNameChanged();
				}
			}
		}
		
		[Column(Storage="_cusEncryptedPassword", DbType="NVarChar(128)")]
		public string cusEncryptedPassword
		{
			get
			{
				return this._cusEncryptedPassword;
			}
			set
			{
				if ((this._cusEncryptedPassword != value))
				{
					this.OncusEncryptedPasswordChanging(value);
					this.SendPropertyChanging();
					this._cusEncryptedPassword = value;
					this.SendPropertyChanged("cusEncryptedPassword");
					this.OncusEncryptedPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_cusPasswordSalt", DbType="NVarChar(128)")]
		public string cusPasswordSalt
		{
			get
			{
				return this._cusPasswordSalt;
			}
			set
			{
				if ((this._cusPasswordSalt != value))
				{
					this.OncusPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._cusPasswordSalt = value;
					this.SendPropertyChanged("cusPasswordSalt");
					this.OncusPasswordSaltChanged();
				}
			}
		}
		
		[Association(Name="Customer_NetMembership", Storage="_NetMemberships", OtherKey="cusID")]
		public EntitySet<NetMembership> NetMemberships
		{
			get
			{
				return this._NetMemberships;
			}
			set
			{
				this._NetMemberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NetMemberships(NetMembership entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_NetMemberships(NetMembership entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[Table(Name="dbo.tbl_AddressCustomer")]
	public partial class AddressCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _addID;
		
		private string _addAddress1;
		
		private string _addAddress2;
		
		private string _addAddress3;
		
		private string _addCity;
		
		private string _addRegion;
		
		private string _addCountry;
		
		private string _addPostalCode;
		
		private string _addSource;
		
		private string _addTempID;
		
		private System.DateTime _addDateCreated;
		
		private System.DateTime _addDateUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaddIDChanging(int value);
    partial void OnaddIDChanged();
    partial void OnaddAddress1Changing(string value);
    partial void OnaddAddress1Changed();
    partial void OnaddAddress2Changing(string value);
    partial void OnaddAddress2Changed();
    partial void OnaddAddress3Changing(string value);
    partial void OnaddAddress3Changed();
    partial void OnaddCityChanging(string value);
    partial void OnaddCityChanged();
    partial void OnaddRegionChanging(string value);
    partial void OnaddRegionChanged();
    partial void OnaddCountryChanging(string value);
    partial void OnaddCountryChanged();
    partial void OnaddPostalCodeChanging(string value);
    partial void OnaddPostalCodeChanged();
    partial void OnaddSourceChanging(string value);
    partial void OnaddSourceChanged();
    partial void OnaddTempIDChanging(string value);
    partial void OnaddTempIDChanged();
    partial void OnaddDateCreatedChanging(System.DateTime value);
    partial void OnaddDateCreatedChanged();
    partial void OnaddDateUpdatedChanging(System.DateTime value);
    partial void OnaddDateUpdatedChanged();
    #endregion
		
		public AddressCustomer()
		{
			OnCreated();
		}
		
		[Column(Storage="_addID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int addID
		{
			get
			{
				return this._addID;
			}
			set
			{
				if ((this._addID != value))
				{
					this.OnaddIDChanging(value);
					this.SendPropertyChanging();
					this._addID = value;
					this.SendPropertyChanged("addID");
					this.OnaddIDChanged();
				}
			}
		}
		
		[Column(Storage="_addAddress1", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string addAddress1
		{
			get
			{
				return this._addAddress1;
			}
			set
			{
				if ((this._addAddress1 != value))
				{
					this.OnaddAddress1Changing(value);
					this.SendPropertyChanging();
					this._addAddress1 = value;
					this.SendPropertyChanged("addAddress1");
					this.OnaddAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_addAddress2", DbType="NVarChar(64)")]
		public string addAddress2
		{
			get
			{
				return this._addAddress2;
			}
			set
			{
				if ((this._addAddress2 != value))
				{
					this.OnaddAddress2Changing(value);
					this.SendPropertyChanging();
					this._addAddress2 = value;
					this.SendPropertyChanged("addAddress2");
					this.OnaddAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_addAddress3", DbType="NVarChar(64)")]
		public string addAddress3
		{
			get
			{
				return this._addAddress3;
			}
			set
			{
				if ((this._addAddress3 != value))
				{
					this.OnaddAddress3Changing(value);
					this.SendPropertyChanging();
					this._addAddress3 = value;
					this.SendPropertyChanged("addAddress3");
					this.OnaddAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_addCity", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string addCity
		{
			get
			{
				return this._addCity;
			}
			set
			{
				if ((this._addCity != value))
				{
					this.OnaddCityChanging(value);
					this.SendPropertyChanging();
					this._addCity = value;
					this.SendPropertyChanged("addCity");
					this.OnaddCityChanged();
				}
			}
		}
		
		[Column(Storage="_addRegion", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string addRegion
		{
			get
			{
				return this._addRegion;
			}
			set
			{
				if ((this._addRegion != value))
				{
					this.OnaddRegionChanging(value);
					this.SendPropertyChanging();
					this._addRegion = value;
					this.SendPropertyChanged("addRegion");
					this.OnaddRegionChanged();
				}
			}
		}
		
		[Column(Storage="_addCountry", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string addCountry
		{
			get
			{
				return this._addCountry;
			}
			set
			{
				if ((this._addCountry != value))
				{
					this.OnaddCountryChanging(value);
					this.SendPropertyChanging();
					this._addCountry = value;
					this.SendPropertyChanged("addCountry");
					this.OnaddCountryChanged();
				}
			}
		}
		
		[Column(Storage="_addPostalCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string addPostalCode
		{
			get
			{
				return this._addPostalCode;
			}
			set
			{
				if ((this._addPostalCode != value))
				{
					this.OnaddPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._addPostalCode = value;
					this.SendPropertyChanged("addPostalCode");
					this.OnaddPostalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_addSource", DbType="VarChar(16)")]
		public string addSource
		{
			get
			{
				return this._addSource;
			}
			set
			{
				if ((this._addSource != value))
				{
					this.OnaddSourceChanging(value);
					this.SendPropertyChanging();
					this._addSource = value;
					this.SendPropertyChanged("addSource");
					this.OnaddSourceChanged();
				}
			}
		}
		
		[Column(Storage="_addTempID", DbType="VarChar(32)")]
		public string addTempID
		{
			get
			{
				return this._addTempID;
			}
			set
			{
				if ((this._addTempID != value))
				{
					this.OnaddTempIDChanging(value);
					this.SendPropertyChanging();
					this._addTempID = value;
					this.SendPropertyChanged("addTempID");
					this.OnaddTempIDChanged();
				}
			}
		}
		
		[Column(Storage="_addDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime addDateCreated
		{
			get
			{
				return this._addDateCreated;
			}
			set
			{
				if ((this._addDateCreated != value))
				{
					this.OnaddDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._addDateCreated = value;
					this.SendPropertyChanged("addDateCreated");
					this.OnaddDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_addDateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime addDateUpdated
		{
			get
			{
				return this._addDateUpdated;
			}
			set
			{
				if ((this._addDateUpdated != value))
				{
					this.OnaddDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._addDateUpdated = value;
					this.SendPropertyChanged("addDateUpdated");
					this.OnaddDateUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_NetMembership")]
	public partial class NetMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cusID;
		
		private string _mtyCode;
		
		private System.DateTime _nmbDateStart;
		
		private System.DateTime _nmbDateEnd;
		
		private System.DateTime _nmbDateCreated;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<MembershipType> _MembershipType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusIDChanging(int value);
    partial void OncusIDChanged();
    partial void OnmtyCodeChanging(string value);
    partial void OnmtyCodeChanged();
    partial void OnnmbDateStartChanging(System.DateTime value);
    partial void OnnmbDateStartChanged();
    partial void OnnmbDateEndChanging(System.DateTime value);
    partial void OnnmbDateEndChanged();
    partial void OnnmbDateCreatedChanging(System.DateTime value);
    partial void OnnmbDateCreatedChanged();
    #endregion
		
		public NetMembership()
		{
			this._Customer = default(EntityRef<Customer>);
			this._MembershipType = default(EntityRef<MembershipType>);
			OnCreated();
		}
		
		[Column(Storage="_cusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cusID
		{
			get
			{
				return this._cusID;
			}
			set
			{
				if ((this._cusID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncusIDChanging(value);
					this.SendPropertyChanging();
					this._cusID = value;
					this.SendPropertyChanged("cusID");
					this.OncusIDChanged();
				}
			}
		}
		
		[Column(Storage="_mtyCode", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mtyCode
		{
			get
			{
				return this._mtyCode;
			}
			set
			{
				if ((this._mtyCode != value))
				{
					if (this._MembershipType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmtyCodeChanging(value);
					this.SendPropertyChanging();
					this._mtyCode = value;
					this.SendPropertyChanged("mtyCode");
					this.OnmtyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_nmbDateStart", DbType="DateTime NOT NULL")]
		public System.DateTime nmbDateStart
		{
			get
			{
				return this._nmbDateStart;
			}
			set
			{
				if ((this._nmbDateStart != value))
				{
					this.OnnmbDateStartChanging(value);
					this.SendPropertyChanging();
					this._nmbDateStart = value;
					this.SendPropertyChanged("nmbDateStart");
					this.OnnmbDateStartChanged();
				}
			}
		}
		
		[Column(Storage="_nmbDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime nmbDateEnd
		{
			get
			{
				return this._nmbDateEnd;
			}
			set
			{
				if ((this._nmbDateEnd != value))
				{
					this.OnnmbDateEndChanging(value);
					this.SendPropertyChanging();
					this._nmbDateEnd = value;
					this.SendPropertyChanged("nmbDateEnd");
					this.OnnmbDateEndChanged();
				}
			}
		}
		
		[Column(Storage="_nmbDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime nmbDateCreated
		{
			get
			{
				return this._nmbDateCreated;
			}
			set
			{
				if ((this._nmbDateCreated != value))
				{
					this.OnnmbDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._nmbDateCreated = value;
					this.SendPropertyChanged("nmbDateCreated");
					this.OnnmbDateCreatedChanged();
				}
			}
		}
		
		[Association(Name="Customer_NetMembership", Storage="_Customer", ThisKey="cusID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.NetMemberships.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.NetMemberships.Add(this);
						this._cusID = value.cusID;
					}
					else
					{
						this._cusID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[Association(Name="MembershipType_NetMembership", Storage="_MembershipType", ThisKey="mtyCode", IsForeignKey=true)]
		public MembershipType MembershipType
		{
			get
			{
				return this._MembershipType.Entity;
			}
			set
			{
				MembershipType previousValue = this._MembershipType.Entity;
				if (((previousValue != value) 
							|| (this._MembershipType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipType.Entity = null;
						previousValue.NetMemberships.Remove(this);
					}
					this._MembershipType.Entity = value;
					if ((value != null))
					{
						value.NetMemberships.Add(this);
						this._mtyCode = value.mtyCode;
					}
					else
					{
						this._mtyCode = default(string);
					}
					this.SendPropertyChanged("MembershipType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_MembershipType")]
	public partial class MembershipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mtyCode;
		
		private string _mtyName;
		
		private System.Nullable<int> _mtyNukeRoleID;
		
		private System.Guid _mtyGUID;
		
		private bool _mtyAuthenticatedByHarper;
		
		private EntitySet<NetMembership> _NetMemberships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmtyCodeChanging(string value);
    partial void OnmtyCodeChanged();
    partial void OnmtyNameChanging(string value);
    partial void OnmtyNameChanged();
    partial void OnmtyNukeRoleIDChanging(System.Nullable<int> value);
    partial void OnmtyNukeRoleIDChanged();
    partial void OnmtyGUIDChanging(System.Guid value);
    partial void OnmtyGUIDChanged();
    partial void OnmtyAuthenticatedByHarperChanging(bool value);
    partial void OnmtyAuthenticatedByHarperChanged();
    #endregion
		
		public MembershipType()
		{
			this._NetMemberships = new EntitySet<NetMembership>(new Action<NetMembership>(this.attach_NetMemberships), new Action<NetMembership>(this.detach_NetMemberships));
			OnCreated();
		}
		
		[Column(Storage="_mtyCode", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mtyCode
		{
			get
			{
				return this._mtyCode;
			}
			set
			{
				if ((this._mtyCode != value))
				{
					this.OnmtyCodeChanging(value);
					this.SendPropertyChanging();
					this._mtyCode = value;
					this.SendPropertyChanged("mtyCode");
					this.OnmtyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_mtyName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string mtyName
		{
			get
			{
				return this._mtyName;
			}
			set
			{
				if ((this._mtyName != value))
				{
					this.OnmtyNameChanging(value);
					this.SendPropertyChanging();
					this._mtyName = value;
					this.SendPropertyChanged("mtyName");
					this.OnmtyNameChanged();
				}
			}
		}
		
		[Column(Storage="_mtyNukeRoleID", DbType="Int")]
		public System.Nullable<int> mtyNukeRoleID
		{
			get
			{
				return this._mtyNukeRoleID;
			}
			set
			{
				if ((this._mtyNukeRoleID != value))
				{
					this.OnmtyNukeRoleIDChanging(value);
					this.SendPropertyChanging();
					this._mtyNukeRoleID = value;
					this.SendPropertyChanged("mtyNukeRoleID");
					this.OnmtyNukeRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_mtyGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid mtyGUID
		{
			get
			{
				return this._mtyGUID;
			}
			set
			{
				if ((this._mtyGUID != value))
				{
					this.OnmtyGUIDChanging(value);
					this.SendPropertyChanging();
					this._mtyGUID = value;
					this.SendPropertyChanged("mtyGUID");
					this.OnmtyGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_mtyAuthenticatedByHarper", DbType="Bit NOT NULL")]
		public bool mtyAuthenticatedByHarper
		{
			get
			{
				return this._mtyAuthenticatedByHarper;
			}
			set
			{
				if ((this._mtyAuthenticatedByHarper != value))
				{
					this.OnmtyAuthenticatedByHarperChanging(value);
					this.SendPropertyChanging();
					this._mtyAuthenticatedByHarper = value;
					this.SendPropertyChanged("mtyAuthenticatedByHarper");
					this.OnmtyAuthenticatedByHarperChanged();
				}
			}
		}
		
		[Association(Name="MembershipType_NetMembership", Storage="_NetMemberships", OtherKey="mtyCode")]
		public EntitySet<NetMembership> NetMemberships
		{
			get
			{
				return this._NetMemberships;
			}
			set
			{
				this._NetMemberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NetMemberships(NetMembership entity)
		{
			this.SendPropertyChanging();
			entity.MembershipType = this;
		}
		
		private void detach_NetMemberships(NetMembership entity)
		{
			this.SendPropertyChanging();
			entity.MembershipType = null;
		}
	}
	
	[Table(Name="dbo.SFG_CustomerNumbers")]
	public partial class SFG_CustomerNumber
	{
		
		private int _cusID;
		
		private string _SFGCustNum;
		
		public SFG_CustomerNumber()
		{
		}
		
		[Column(Storage="_cusID", DbType="Int NOT NULL")]
		public int cusID
		{
			get
			{
				return this._cusID;
			}
			set
			{
				if ((this._cusID != value))
				{
					this._cusID = value;
				}
			}
		}
		
		[Column(Storage="_SFGCustNum", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string SFGCustNum
		{
			get
			{
				return this._SFGCustNum;
			}
			set
			{
				if ((this._SFGCustNum != value))
				{
					this._SFGCustNum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SFG_ProdCodes")]
	public partial class SFG_ProdCode
	{
		
		private string _ExtCode;
		
		private string _IntCode;
		
		public SFG_ProdCode()
		{
		}
		
		[Column(Storage="_ExtCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ExtCode
		{
			get
			{
				return this._ExtCode;
			}
			set
			{
				if ((this._ExtCode != value))
				{
					this._ExtCode = value;
				}
			}
		}
		
		[Column(Storage="_IntCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string IntCode
		{
			get
			{
				return this._IntCode;
			}
			set
			{
				if ((this._IntCode != value))
				{
					this._IntCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
