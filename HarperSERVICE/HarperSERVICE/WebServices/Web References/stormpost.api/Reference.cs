//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace MemberServices.stormpost.api {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapRequestProcessorSoapBinding", Namespace="http://skylist.com/services/SoapRequestProcessor")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecipField))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecipientData))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MailingReport))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SummaryCampaignReport))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SummaryMailingReport))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IdAndTitle))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LinkReport))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MailingPartReport))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ListSubscription))]
    public partial class SoapRequestProcessorService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback createRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRecipientAndReturnRecipIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipientByAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipientByExternalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipientSubscriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeToListOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeFromListOperationCompleted;
        
        private System.Threading.SendOrPostCallback globalUnsubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback globalUnsubscribeAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSendTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doImportAndSendFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback doImportFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImportStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailedMailingReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImportTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMailingReportSummariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMailingReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCampaignReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSendTemplateContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSendTemplateDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSendTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFacebookMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFacebookMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSMSMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSMSMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmailMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmailMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTestMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableMailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMailingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessageFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessageFromTemplateWithReferenceNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessagesFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendEmailMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMSMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSendTemplateDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSendTemplateContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecipSubscriptionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContentFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadContentFromSFTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadContentFromHTTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContentUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback listContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateContentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapRequestProcessorService() {
            this.Url = global::MemberServices.Properties.Settings.Default.MemberServices_stormpost_api_SoapRequestProcessorService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public authentication authenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createRecipientCompletedEventHandler createRecipientCompleted;
        
        /// <remarks/>
        public event createRecipientAndReturnRecipIDCompletedEventHandler createRecipientAndReturnRecipIDCompleted;
        
        /// <remarks/>
        public event updateRecipientCompletedEventHandler updateRecipientCompleted;
        
        /// <remarks/>
        public event getRecipientCompletedEventHandler getRecipientCompleted;
        
        /// <remarks/>
        public event getRecipientByAddressCompletedEventHandler getRecipientByAddressCompleted;
        
        /// <remarks/>
        public event getRecipientByExternalIDCompletedEventHandler getRecipientByExternalIDCompleted;
        
        /// <remarks/>
        public event getRecipientSubscriptionsCompletedEventHandler getRecipientSubscriptionsCompleted;
        
        /// <remarks/>
        public event subscribeToListCompletedEventHandler subscribeToListCompleted;
        
        /// <remarks/>
        public event unsubscribeFromListCompletedEventHandler unsubscribeFromListCompleted;
        
        /// <remarks/>
        public event globalUnsubscribeCompletedEventHandler globalUnsubscribeCompleted;
        
        /// <remarks/>
        public event globalUnsubscribeAllCompletedEventHandler globalUnsubscribeAllCompleted;
        
        /// <remarks/>
        public event getListCompletedEventHandler getListCompleted;
        
        /// <remarks/>
        public event getListsCompletedEventHandler getListsCompleted;
        
        /// <remarks/>
        public event createSendTemplateCompletedEventHandler createSendTemplateCompleted;
        
        /// <remarks/>
        public event doImportAndSendFromTemplateCompletedEventHandler doImportAndSendFromTemplateCompleted;
        
        /// <remarks/>
        public event doImportFromTemplateCompletedEventHandler doImportFromTemplateCompleted;
        
        /// <remarks/>
        public event getImportStatusCompletedEventHandler getImportStatusCompleted;
        
        /// <remarks/>
        public event getDetailedMailingReportCompletedEventHandler getDetailedMailingReportCompleted;
        
        /// <remarks/>
        public event getImportTemplatesCompletedEventHandler getImportTemplatesCompleted;
        
        /// <remarks/>
        public event getMailingReportSummariesCompletedEventHandler getMailingReportSummariesCompleted;
        
        /// <remarks/>
        public event getMailingReportsCompletedEventHandler getMailingReportsCompleted;
        
        /// <remarks/>
        public event getCampaignReportsCompletedEventHandler getCampaignReportsCompleted;
        
        /// <remarks/>
        public event getSendTemplateContentCompletedEventHandler getSendTemplateContentCompleted;
        
        /// <remarks/>
        public event getSendTemplateDefinitionCompletedEventHandler getSendTemplateDefinitionCompleted;
        
        /// <remarks/>
        public event getSendTemplatesCompletedEventHandler getSendTemplatesCompleted;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getStatisticsCompletedEventHandler getStatisticsCompleted;
        
        /// <remarks/>
        public event createFacebookMailingCompletedEventHandler createFacebookMailingCompleted;
        
        /// <remarks/>
        public event updateFacebookMailingCompletedEventHandler updateFacebookMailingCompleted;
        
        /// <remarks/>
        public event createSMSMailingCompletedEventHandler createSMSMailingCompleted;
        
        /// <remarks/>
        public event updateSMSMailingCompletedEventHandler updateSMSMailingCompleted;
        
        /// <remarks/>
        public event createEmailMailingCompletedEventHandler createEmailMailingCompleted;
        
        /// <remarks/>
        public event updateEmailMailingCompletedEventHandler updateEmailMailingCompleted;
        
        /// <remarks/>
        public event sendTestMessageCompletedEventHandler sendTestMessageCompleted;
        
        /// <remarks/>
        public event enableMailingCompletedEventHandler enableMailingCompleted;
        
        /// <remarks/>
        public event getMailingStatusCompletedEventHandler getMailingStatusCompleted;
        
        /// <remarks/>
        public event sendMessageFromTemplateCompletedEventHandler sendMessageFromTemplateCompleted;
        
        /// <remarks/>
        public event sendMessageFromTemplateWithReferenceNumberCompletedEventHandler sendMessageFromTemplateWithReferenceNumberCompleted;
        
        /// <remarks/>
        public event sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventHandler sendMessageFromTemplateWithReferenceNumberAndAddressCompleted;
        
        /// <remarks/>
        public event sendMessagesFromTemplateCompletedEventHandler sendMessagesFromTemplateCompleted;
        
        /// <remarks/>
        public event sendEmailMessagesCompletedEventHandler sendEmailMessagesCompleted;
        
        /// <remarks/>
        public event sendSMSMessagesCompletedEventHandler sendSMSMessagesCompleted;
        
        /// <remarks/>
        public event updateSendTemplateDefinitionCompletedEventHandler updateSendTemplateDefinitionCompleted;
        
        /// <remarks/>
        public event updateSendTemplateContentsCompletedEventHandler updateSendTemplateContentsCompleted;
        
        /// <remarks/>
        public event getRecipientInfoCompletedEventHandler getRecipientInfoCompleted;
        
        /// <remarks/>
        public event getRecipSubscriptionInfoCompletedEventHandler getRecipSubscriptionInfoCompleted;
        
        /// <remarks/>
        public event createContentFolderCompletedEventHandler createContentFolderCompleted;
        
        /// <remarks/>
        public event deleteContentCompletedEventHandler deleteContentCompleted;
        
        /// <remarks/>
        public event uploadContentFromSFTPCompletedEventHandler uploadContentFromSFTPCompleted;
        
        /// <remarks/>
        public event uploadContentFromHTTPCompletedEventHandler uploadContentFromHTTPCompleted;
        
        /// <remarks/>
        public event getContentUploadStatusCompletedEventHandler getContentUploadStatusCompleted;
        
        /// <remarks/>
        public event listContentsCompletedEventHandler listContentsCompleted;
        
        /// <remarks/>
        public event getContentCompletedEventHandler getContentCompleted;
        
        /// <remarks/>
        public event createContentCompletedEventHandler createContentCompleted;
        
        /// <remarks/>
        public event updateContentCompletedEventHandler updateContentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void createRecipient(Recipient recipient) {
            this.Invoke("createRecipient", new object[] {
                        recipient});
        }
        
        /// <remarks/>
        public void createRecipientAsync(Recipient recipient) {
            this.createRecipientAsync(recipient, null);
        }
        
        /// <remarks/>
        public void createRecipientAsync(Recipient recipient, object userState) {
            if ((this.createRecipientOperationCompleted == null)) {
                this.createRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRecipientOperationCompleted);
            }
            this.InvokeAsync("createRecipient", new object[] {
                        recipient}, this.createRecipientOperationCompleted, userState);
        }
        
        private void OncreateRecipientOperationCompleted(object arg) {
            if ((this.createRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRecipientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("recipID")]
        public int createRecipientAndReturnRecipID(Recipient recipient) {
            object[] results = this.Invoke("createRecipientAndReturnRecipID", new object[] {
                        recipient});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createRecipientAndReturnRecipIDAsync(Recipient recipient) {
            this.createRecipientAndReturnRecipIDAsync(recipient, null);
        }
        
        /// <remarks/>
        public void createRecipientAndReturnRecipIDAsync(Recipient recipient, object userState) {
            if ((this.createRecipientAndReturnRecipIDOperationCompleted == null)) {
                this.createRecipientAndReturnRecipIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRecipientAndReturnRecipIDOperationCompleted);
            }
            this.InvokeAsync("createRecipientAndReturnRecipID", new object[] {
                        recipient}, this.createRecipientAndReturnRecipIDOperationCompleted, userState);
        }
        
        private void OncreateRecipientAndReturnRecipIDOperationCompleted(object arg) {
            if ((this.createRecipientAndReturnRecipIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRecipientAndReturnRecipIDCompleted(this, new createRecipientAndReturnRecipIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void updateRecipient(Recipient recipient) {
            this.Invoke("updateRecipient", new object[] {
                        recipient});
        }
        
        /// <remarks/>
        public void updateRecipientAsync(Recipient recipient) {
            this.updateRecipientAsync(recipient, null);
        }
        
        /// <remarks/>
        public void updateRecipientAsync(Recipient recipient, object userState) {
            if ((this.updateRecipientOperationCompleted == null)) {
                this.updateRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRecipientOperationCompleted);
            }
            this.InvokeAsync("updateRecipient", new object[] {
                        recipient}, this.updateRecipientOperationCompleted, userState);
        }
        
        private void OnupdateRecipientOperationCompleted(object arg) {
            if ((this.updateRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRecipientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("recipient")]
        public Recipient getRecipient(int recipID) {
            object[] results = this.Invoke("getRecipient", new object[] {
                        recipID});
            return ((Recipient)(results[0]));
        }
        
        /// <remarks/>
        public void getRecipientAsync(int recipID) {
            this.getRecipientAsync(recipID, null);
        }
        
        /// <remarks/>
        public void getRecipientAsync(int recipID, object userState) {
            if ((this.getRecipientOperationCompleted == null)) {
                this.getRecipientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipientOperationCompleted);
            }
            this.InvokeAsync("getRecipient", new object[] {
                        recipID}, this.getRecipientOperationCompleted, userState);
        }
        
        private void OngetRecipientOperationCompleted(object arg) {
            if ((this.getRecipientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipientCompleted(this, new getRecipientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("recipient")]
        public Recipient getRecipientByAddress(string address) {
            object[] results = this.Invoke("getRecipientByAddress", new object[] {
                        address});
            return ((Recipient)(results[0]));
        }
        
        /// <remarks/>
        public void getRecipientByAddressAsync(string address) {
            this.getRecipientByAddressAsync(address, null);
        }
        
        /// <remarks/>
        public void getRecipientByAddressAsync(string address, object userState) {
            if ((this.getRecipientByAddressOperationCompleted == null)) {
                this.getRecipientByAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipientByAddressOperationCompleted);
            }
            this.InvokeAsync("getRecipientByAddress", new object[] {
                        address}, this.getRecipientByAddressOperationCompleted, userState);
        }
        
        private void OngetRecipientByAddressOperationCompleted(object arg) {
            if ((this.getRecipientByAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipientByAddressCompleted(this, new getRecipientByAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("recipient")]
        public Recipient getRecipientByExternalID(string externalID) {
            object[] results = this.Invoke("getRecipientByExternalID", new object[] {
                        externalID});
            return ((Recipient)(results[0]));
        }
        
        /// <remarks/>
        public void getRecipientByExternalIDAsync(string externalID) {
            this.getRecipientByExternalIDAsync(externalID, null);
        }
        
        /// <remarks/>
        public void getRecipientByExternalIDAsync(string externalID, object userState) {
            if ((this.getRecipientByExternalIDOperationCompleted == null)) {
                this.getRecipientByExternalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipientByExternalIDOperationCompleted);
            }
            this.InvokeAsync("getRecipientByExternalID", new object[] {
                        externalID}, this.getRecipientByExternalIDOperationCompleted, userState);
        }
        
        private void OngetRecipientByExternalIDOperationCompleted(object arg) {
            if ((this.getRecipientByExternalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipientByExternalIDCompleted(this, new getRecipientByExternalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRecipientSubscriptionsReturn")]
        public ListSubscription[] getRecipientSubscriptions(int recipID) {
            object[] results = this.Invoke("getRecipientSubscriptions", new object[] {
                        recipID});
            return ((ListSubscription[])(results[0]));
        }
        
        /// <remarks/>
        public void getRecipientSubscriptionsAsync(int recipID) {
            this.getRecipientSubscriptionsAsync(recipID, null);
        }
        
        /// <remarks/>
        public void getRecipientSubscriptionsAsync(int recipID, object userState) {
            if ((this.getRecipientSubscriptionsOperationCompleted == null)) {
                this.getRecipientSubscriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipientSubscriptionsOperationCompleted);
            }
            this.InvokeAsync("getRecipientSubscriptions", new object[] {
                        recipID}, this.getRecipientSubscriptionsOperationCompleted, userState);
        }
        
        private void OngetRecipientSubscriptionsOperationCompleted(object arg) {
            if ((this.getRecipientSubscriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipientSubscriptionsCompleted(this, new getRecipientSubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void subscribeToList(int listID, int recipID, bool confirmed, string sourceID, int mailingID) {
            this.Invoke("subscribeToList", new object[] {
                        listID,
                        recipID,
                        confirmed,
                        sourceID,
                        mailingID});
        }
        
        /// <remarks/>
        public void subscribeToListAsync(int listID, int recipID, bool confirmed, string sourceID, int mailingID) {
            this.subscribeToListAsync(listID, recipID, confirmed, sourceID, mailingID, null);
        }
        
        /// <remarks/>
        public void subscribeToListAsync(int listID, int recipID, bool confirmed, string sourceID, int mailingID, object userState) {
            if ((this.subscribeToListOperationCompleted == null)) {
                this.subscribeToListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeToListOperationCompleted);
            }
            this.InvokeAsync("subscribeToList", new object[] {
                        listID,
                        recipID,
                        confirmed,
                        sourceID,
                        mailingID}, this.subscribeToListOperationCompleted, userState);
        }
        
        private void OnsubscribeToListOperationCompleted(object arg) {
            if ((this.subscribeToListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeToListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void unsubscribeFromList(int listID, int recipID, int mailingID) {
            this.Invoke("unsubscribeFromList", new object[] {
                        listID,
                        recipID,
                        mailingID});
        }
        
        /// <remarks/>
        public void unsubscribeFromListAsync(int listID, int recipID, int mailingID) {
            this.unsubscribeFromListAsync(listID, recipID, mailingID, null);
        }
        
        /// <remarks/>
        public void unsubscribeFromListAsync(int listID, int recipID, int mailingID, object userState) {
            if ((this.unsubscribeFromListOperationCompleted == null)) {
                this.unsubscribeFromListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeFromListOperationCompleted);
            }
            this.InvokeAsync("unsubscribeFromList", new object[] {
                        listID,
                        recipID,
                        mailingID}, this.unsubscribeFromListOperationCompleted, userState);
        }
        
        private void OnunsubscribeFromListOperationCompleted(object arg) {
            if ((this.unsubscribeFromListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeFromListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void globalUnsubscribe(int recipID, int mailingID) {
            this.Invoke("globalUnsubscribe", new object[] {
                        recipID,
                        mailingID});
        }
        
        /// <remarks/>
        public void globalUnsubscribeAsync(int recipID, int mailingID) {
            this.globalUnsubscribeAsync(recipID, mailingID, null);
        }
        
        /// <remarks/>
        public void globalUnsubscribeAsync(int recipID, int mailingID, object userState) {
            if ((this.globalUnsubscribeOperationCompleted == null)) {
                this.globalUnsubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnglobalUnsubscribeOperationCompleted);
            }
            this.InvokeAsync("globalUnsubscribe", new object[] {
                        recipID,
                        mailingID}, this.globalUnsubscribeOperationCompleted, userState);
        }
        
        private void OnglobalUnsubscribeOperationCompleted(object arg) {
            if ((this.globalUnsubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.globalUnsubscribeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void globalUnsubscribeAll(string address, int mailingID) {
            this.Invoke("globalUnsubscribeAll", new object[] {
                        address,
                        mailingID});
        }
        
        /// <remarks/>
        public void globalUnsubscribeAllAsync(string address, int mailingID) {
            this.globalUnsubscribeAllAsync(address, mailingID, null);
        }
        
        /// <remarks/>
        public void globalUnsubscribeAllAsync(string address, int mailingID, object userState) {
            if ((this.globalUnsubscribeAllOperationCompleted == null)) {
                this.globalUnsubscribeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnglobalUnsubscribeAllOperationCompleted);
            }
            this.InvokeAsync("globalUnsubscribeAll", new object[] {
                        address,
                        mailingID}, this.globalUnsubscribeAllOperationCompleted, userState);
        }
        
        private void OnglobalUnsubscribeAllOperationCompleted(object arg) {
            if ((this.globalUnsubscribeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.globalUnsubscribeAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public List getList(int listID) {
            object[] results = this.Invoke("getList", new object[] {
                        listID});
            return ((List)(results[0]));
        }
        
        /// <remarks/>
        public void getListAsync(int listID) {
            this.getListAsync(listID, null);
        }
        
        /// <remarks/>
        public void getListAsync(int listID, object userState) {
            if ((this.getListOperationCompleted == null)) {
                this.getListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListOperationCompleted);
            }
            this.InvokeAsync("getList", new object[] {
                        listID}, this.getListOperationCompleted, userState);
        }
        
        private void OngetListOperationCompleted(object arg) {
            if ((this.getListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListCompleted(this, new getListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getListsReturn")]
        public List[] getLists(List searchValues) {
            object[] results = this.Invoke("getLists", new object[] {
                        searchValues});
            return ((List[])(results[0]));
        }
        
        /// <remarks/>
        public void getListsAsync(List searchValues) {
            this.getListsAsync(searchValues, null);
        }
        
        /// <remarks/>
        public void getListsAsync(List searchValues, object userState) {
            if ((this.getListsOperationCompleted == null)) {
                this.getListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListsOperationCompleted);
            }
            this.InvokeAsync("getLists", new object[] {
                        searchValues}, this.getListsOperationCompleted, userState);
        }
        
        private void OngetListsOperationCompleted(object arg) {
            if ((this.getListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListsCompleted(this, new getListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("createSendTemplateReturn")]
        public int createSendTemplate(SendTemplateBean sendTemplateBean, string textContent, string htmlContent) {
            object[] results = this.Invoke("createSendTemplate", new object[] {
                        sendTemplateBean,
                        textContent,
                        htmlContent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createSendTemplateAsync(SendTemplateBean sendTemplateBean, string textContent, string htmlContent) {
            this.createSendTemplateAsync(sendTemplateBean, textContent, htmlContent, null);
        }
        
        /// <remarks/>
        public void createSendTemplateAsync(SendTemplateBean sendTemplateBean, string textContent, string htmlContent, object userState) {
            if ((this.createSendTemplateOperationCompleted == null)) {
                this.createSendTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSendTemplateOperationCompleted);
            }
            this.InvokeAsync("createSendTemplate", new object[] {
                        sendTemplateBean,
                        textContent,
                        htmlContent}, this.createSendTemplateOperationCompleted, userState);
        }
        
        private void OncreateSendTemplateOperationCompleted(object arg) {
            if ((this.createSendTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSendTemplateCompleted(this, new createSendTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("doImportAndSendFromTemplateReturn")]
        public string doImportAndSendFromTemplate(int impTempId, int sendTempId, string data) {
            object[] results = this.Invoke("doImportAndSendFromTemplate", new object[] {
                        impTempId,
                        sendTempId,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doImportAndSendFromTemplateAsync(int impTempId, int sendTempId, string data) {
            this.doImportAndSendFromTemplateAsync(impTempId, sendTempId, data, null);
        }
        
        /// <remarks/>
        public void doImportAndSendFromTemplateAsync(int impTempId, int sendTempId, string data, object userState) {
            if ((this.doImportAndSendFromTemplateOperationCompleted == null)) {
                this.doImportAndSendFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoImportAndSendFromTemplateOperationCompleted);
            }
            this.InvokeAsync("doImportAndSendFromTemplate", new object[] {
                        impTempId,
                        sendTempId,
                        data}, this.doImportAndSendFromTemplateOperationCompleted, userState);
        }
        
        private void OndoImportAndSendFromTemplateOperationCompleted(object arg) {
            if ((this.doImportAndSendFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doImportAndSendFromTemplateCompleted(this, new doImportAndSendFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("doImportFromTemplateReturn")]
        public string doImportFromTemplate(int impTempId, string data) {
            object[] results = this.Invoke("doImportFromTemplate", new object[] {
                        impTempId,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doImportFromTemplateAsync(int impTempId, string data) {
            this.doImportFromTemplateAsync(impTempId, data, null);
        }
        
        /// <remarks/>
        public void doImportFromTemplateAsync(int impTempId, string data, object userState) {
            if ((this.doImportFromTemplateOperationCompleted == null)) {
                this.doImportFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoImportFromTemplateOperationCompleted);
            }
            this.InvokeAsync("doImportFromTemplate", new object[] {
                        impTempId,
                        data}, this.doImportFromTemplateOperationCompleted, userState);
        }
        
        private void OndoImportFromTemplateOperationCompleted(object arg) {
            if ((this.doImportFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doImportFromTemplateCompleted(this, new doImportFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getImportStatusReturn")]
        public string getImportStatus(int importID, string fileName) {
            object[] results = this.Invoke("getImportStatus", new object[] {
                        importID,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getImportStatusAsync(int importID, string fileName) {
            this.getImportStatusAsync(importID, fileName, null);
        }
        
        /// <remarks/>
        public void getImportStatusAsync(int importID, string fileName, object userState) {
            if ((this.getImportStatusOperationCompleted == null)) {
                this.getImportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImportStatusOperationCompleted);
            }
            this.InvokeAsync("getImportStatus", new object[] {
                        importID,
                        fileName}, this.getImportStatusOperationCompleted, userState);
        }
        
        private void OngetImportStatusOperationCompleted(object arg) {
            if ((this.getImportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImportStatusCompleted(this, new getImportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("detailedMailingReportReturn")]
        public DetailedMailingReport getDetailedMailingReport(int mailingId) {
            object[] results = this.Invoke("getDetailedMailingReport", new object[] {
                        mailingId});
            return ((DetailedMailingReport)(results[0]));
        }
        
        /// <remarks/>
        public void getDetailedMailingReportAsync(int mailingId) {
            this.getDetailedMailingReportAsync(mailingId, null);
        }
        
        /// <remarks/>
        public void getDetailedMailingReportAsync(int mailingId, object userState) {
            if ((this.getDetailedMailingReportOperationCompleted == null)) {
                this.getDetailedMailingReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailedMailingReportOperationCompleted);
            }
            this.InvokeAsync("getDetailedMailingReport", new object[] {
                        mailingId}, this.getDetailedMailingReportOperationCompleted, userState);
        }
        
        private void OngetDetailedMailingReportOperationCompleted(object arg) {
            if ((this.getDetailedMailingReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailedMailingReportCompleted(this, new getDetailedMailingReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getImportTemplatesReturn")]
        public IdAndTitle[] getImportTemplates() {
            object[] results = this.Invoke("getImportTemplates", new object[0]);
            return ((IdAndTitle[])(results[0]));
        }
        
        /// <remarks/>
        public void getImportTemplatesAsync() {
            this.getImportTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void getImportTemplatesAsync(object userState) {
            if ((this.getImportTemplatesOperationCompleted == null)) {
                this.getImportTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImportTemplatesOperationCompleted);
            }
            this.InvokeAsync("getImportTemplates", new object[0], this.getImportTemplatesOperationCompleted, userState);
        }
        
        private void OngetImportTemplatesOperationCompleted(object arg) {
            if ((this.getImportTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImportTemplatesCompleted(this, new getImportTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("mailingReportSummaryReturn")]
        public SummaryMailingReport[] getMailingReportSummaries(int siteid, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime fromdate, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime todate, string type, string listid, string limit, string title, out SummaryCampaignReport[] mailingReportSummaryReturnCamp) {
            object[] results = this.Invoke("getMailingReportSummaries", new object[] {
                        siteid,
                        fromdate,
                        todate,
                        type,
                        listid,
                        limit,
                        title});
            mailingReportSummaryReturnCamp = ((SummaryCampaignReport[])(results[1]));
            return ((SummaryMailingReport[])(results[0]));
        }
        
        /// <remarks/>
        public void getMailingReportSummariesAsync(int siteid, System.DateTime fromdate, System.DateTime todate, string type, string listid, string limit, string title) {
            this.getMailingReportSummariesAsync(siteid, fromdate, todate, type, listid, limit, title, null);
        }
        
        /// <remarks/>
        public void getMailingReportSummariesAsync(int siteid, System.DateTime fromdate, System.DateTime todate, string type, string listid, string limit, string title, object userState) {
            if ((this.getMailingReportSummariesOperationCompleted == null)) {
                this.getMailingReportSummariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailingReportSummariesOperationCompleted);
            }
            this.InvokeAsync("getMailingReportSummaries", new object[] {
                        siteid,
                        fromdate,
                        todate,
                        type,
                        listid,
                        limit,
                        title}, this.getMailingReportSummariesOperationCompleted, userState);
        }
        
        private void OngetMailingReportSummariesOperationCompleted(object arg) {
            if ((this.getMailingReportSummariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailingReportSummariesCompleted(this, new getMailingReportSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("mailingReportReturn")]
        public MailingReport[] getMailingReports([System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime fromdate, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime todate, string type, string channel, int listid, int limit, string mailingtitle, string listtitle, string listexternalid) {
            object[] results = this.Invoke("getMailingReports", new object[] {
                        fromdate,
                        todate,
                        type,
                        channel,
                        listid,
                        limit,
                        mailingtitle,
                        listtitle,
                        listexternalid});
            return ((MailingReport[])(results[0]));
        }
        
        /// <remarks/>
        public void getMailingReportsAsync(System.DateTime fromdate, System.DateTime todate, string type, string channel, int listid, int limit, string mailingtitle, string listtitle, string listexternalid) {
            this.getMailingReportsAsync(fromdate, todate, type, channel, listid, limit, mailingtitle, listtitle, listexternalid, null);
        }
        
        /// <remarks/>
        public void getMailingReportsAsync(System.DateTime fromdate, System.DateTime todate, string type, string channel, int listid, int limit, string mailingtitle, string listtitle, string listexternalid, object userState) {
            if ((this.getMailingReportsOperationCompleted == null)) {
                this.getMailingReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailingReportsOperationCompleted);
            }
            this.InvokeAsync("getMailingReports", new object[] {
                        fromdate,
                        todate,
                        type,
                        channel,
                        listid,
                        limit,
                        mailingtitle,
                        listtitle,
                        listexternalid}, this.getMailingReportsOperationCompleted, userState);
        }
        
        private void OngetMailingReportsOperationCompleted(object arg) {
            if ((this.getMailingReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailingReportsCompleted(this, new getMailingReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("campaignReportReturn")]
        public SummaryCampaignReport[] getCampaignReports([System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime fromdate, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime todate, string channel, int limit, string title) {
            object[] results = this.Invoke("getCampaignReports", new object[] {
                        fromdate,
                        todate,
                        channel,
                        limit,
                        title});
            return ((SummaryCampaignReport[])(results[0]));
        }
        
        /// <remarks/>
        public void getCampaignReportsAsync(System.DateTime fromdate, System.DateTime todate, string channel, int limit, string title) {
            this.getCampaignReportsAsync(fromdate, todate, channel, limit, title, null);
        }
        
        /// <remarks/>
        public void getCampaignReportsAsync(System.DateTime fromdate, System.DateTime todate, string channel, int limit, string title, object userState) {
            if ((this.getCampaignReportsOperationCompleted == null)) {
                this.getCampaignReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCampaignReportsOperationCompleted);
            }
            this.InvokeAsync("getCampaignReports", new object[] {
                        fromdate,
                        todate,
                        channel,
                        limit,
                        title}, this.getCampaignReportsOperationCompleted, userState);
        }
        
        private void OngetCampaignReportsOperationCompleted(object arg) {
            if ((this.getCampaignReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCampaignReportsCompleted(this, new getCampaignReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSendTemplateContentReturn")]
        public string getSendTemplateContent(int id, string part) {
            object[] results = this.Invoke("getSendTemplateContent", new object[] {
                        id,
                        part});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSendTemplateContentAsync(int id, string part) {
            this.getSendTemplateContentAsync(id, part, null);
        }
        
        /// <remarks/>
        public void getSendTemplateContentAsync(int id, string part, object userState) {
            if ((this.getSendTemplateContentOperationCompleted == null)) {
                this.getSendTemplateContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSendTemplateContentOperationCompleted);
            }
            this.InvokeAsync("getSendTemplateContent", new object[] {
                        id,
                        part}, this.getSendTemplateContentOperationCompleted, userState);
        }
        
        private void OngetSendTemplateContentOperationCompleted(object arg) {
            if ((this.getSendTemplateContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSendTemplateContentCompleted(this, new getSendTemplateContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSendTemplateDefinitionReturn")]
        public SendTemplateBean getSendTemplateDefinition(int id) {
            object[] results = this.Invoke("getSendTemplateDefinition", new object[] {
                        id});
            return ((SendTemplateBean)(results[0]));
        }
        
        /// <remarks/>
        public void getSendTemplateDefinitionAsync(int id) {
            this.getSendTemplateDefinitionAsync(id, null);
        }
        
        /// <remarks/>
        public void getSendTemplateDefinitionAsync(int id, object userState) {
            if ((this.getSendTemplateDefinitionOperationCompleted == null)) {
                this.getSendTemplateDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSendTemplateDefinitionOperationCompleted);
            }
            this.InvokeAsync("getSendTemplateDefinition", new object[] {
                        id}, this.getSendTemplateDefinitionOperationCompleted, userState);
        }
        
        private void OngetSendTemplateDefinitionOperationCompleted(object arg) {
            if ((this.getSendTemplateDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSendTemplateDefinitionCompleted(this, new getSendTemplateDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSendTemplatesReturn")]
        public IdAndTitle[] getSendTemplates() {
            object[] results = this.Invoke("getSendTemplates", new object[0]);
            return ((IdAndTitle[])(results[0]));
        }
        
        /// <remarks/>
        public void getSendTemplatesAsync() {
            this.getSendTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void getSendTemplatesAsync(object userState) {
            if ((this.getSendTemplatesOperationCompleted == null)) {
                this.getSendTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSendTemplatesOperationCompleted);
            }
            this.InvokeAsync("getSendTemplates", new object[0], this.getSendTemplatesOperationCompleted, userState);
        }
        
        private void OngetSendTemplatesOperationCompleted(object arg) {
            if ((this.getSendTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSendTemplatesCompleted(this, new getSendTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVersionReturn")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("getStatisticsReturn")]
        public string getStatistics() {
            object[] results = this.Invoke("getStatistics", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsAsync() {
            this.getStatisticsAsync(null);
        }
        
        /// <remarks/>
        public void getStatisticsAsync(object userState) {
            if ((this.getStatisticsOperationCompleted == null)) {
                this.getStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsOperationCompleted);
            }
            this.InvokeAsync("getStatistics", new object[0], this.getStatisticsOperationCompleted, userState);
        }
        
        private void OngetStatisticsOperationCompleted(object arg) {
            if ((this.getStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsCompleted(this, new getStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("createFacebookMailingReturn")]
        public int createFacebookMailing(Mailing mailing, FacebookContent content) {
            object[] results = this.Invoke("createFacebookMailing", new object[] {
                        mailing,
                        content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createFacebookMailingAsync(Mailing mailing, FacebookContent content) {
            this.createFacebookMailingAsync(mailing, content, null);
        }
        
        /// <remarks/>
        public void createFacebookMailingAsync(Mailing mailing, FacebookContent content, object userState) {
            if ((this.createFacebookMailingOperationCompleted == null)) {
                this.createFacebookMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFacebookMailingOperationCompleted);
            }
            this.InvokeAsync("createFacebookMailing", new object[] {
                        mailing,
                        content}, this.createFacebookMailingOperationCompleted, userState);
        }
        
        private void OncreateFacebookMailingOperationCompleted(object arg) {
            if ((this.createFacebookMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFacebookMailingCompleted(this, new createFacebookMailingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void updateFacebookMailing(int mailingID, Mailing mailing, FacebookContent content) {
            this.Invoke("updateFacebookMailing", new object[] {
                        mailingID,
                        mailing,
                        content});
        }
        
        /// <remarks/>
        public void updateFacebookMailingAsync(int mailingID, Mailing mailing, FacebookContent content) {
            this.updateFacebookMailingAsync(mailingID, mailing, content, null);
        }
        
        /// <remarks/>
        public void updateFacebookMailingAsync(int mailingID, Mailing mailing, FacebookContent content, object userState) {
            if ((this.updateFacebookMailingOperationCompleted == null)) {
                this.updateFacebookMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFacebookMailingOperationCompleted);
            }
            this.InvokeAsync("updateFacebookMailing", new object[] {
                        mailingID,
                        mailing,
                        content}, this.updateFacebookMailingOperationCompleted, userState);
        }
        
        private void OnupdateFacebookMailingOperationCompleted(object arg) {
            if ((this.updateFacebookMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFacebookMailingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("createSMSMailingReturn")]
        public int createSMSMailing(Mailing mailing, SMSContent content) {
            object[] results = this.Invoke("createSMSMailing", new object[] {
                        mailing,
                        content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createSMSMailingAsync(Mailing mailing, SMSContent content) {
            this.createSMSMailingAsync(mailing, content, null);
        }
        
        /// <remarks/>
        public void createSMSMailingAsync(Mailing mailing, SMSContent content, object userState) {
            if ((this.createSMSMailingOperationCompleted == null)) {
                this.createSMSMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSMSMailingOperationCompleted);
            }
            this.InvokeAsync("createSMSMailing", new object[] {
                        mailing,
                        content}, this.createSMSMailingOperationCompleted, userState);
        }
        
        private void OncreateSMSMailingOperationCompleted(object arg) {
            if ((this.createSMSMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSMSMailingCompleted(this, new createSMSMailingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void updateSMSMailing(int mailingID, Mailing mailing, SMSContent content) {
            this.Invoke("updateSMSMailing", new object[] {
                        mailingID,
                        mailing,
                        content});
        }
        
        /// <remarks/>
        public void updateSMSMailingAsync(int mailingID, Mailing mailing, SMSContent content) {
            this.updateSMSMailingAsync(mailingID, mailing, content, null);
        }
        
        /// <remarks/>
        public void updateSMSMailingAsync(int mailingID, Mailing mailing, SMSContent content, object userState) {
            if ((this.updateSMSMailingOperationCompleted == null)) {
                this.updateSMSMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSMSMailingOperationCompleted);
            }
            this.InvokeAsync("updateSMSMailing", new object[] {
                        mailingID,
                        mailing,
                        content}, this.updateSMSMailingOperationCompleted, userState);
        }
        
        private void OnupdateSMSMailingOperationCompleted(object arg) {
            if ((this.updateSMSMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSMSMailingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("createEmailMailingReturn")]
        public int createEmailMailing(Mailing mailing, EmailContent content) {
            object[] results = this.Invoke("createEmailMailing", new object[] {
                        mailing,
                        content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createEmailMailingAsync(Mailing mailing, EmailContent content) {
            this.createEmailMailingAsync(mailing, content, null);
        }
        
        /// <remarks/>
        public void createEmailMailingAsync(Mailing mailing, EmailContent content, object userState) {
            if ((this.createEmailMailingOperationCompleted == null)) {
                this.createEmailMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmailMailingOperationCompleted);
            }
            this.InvokeAsync("createEmailMailing", new object[] {
                        mailing,
                        content}, this.createEmailMailingOperationCompleted, userState);
        }
        
        private void OncreateEmailMailingOperationCompleted(object arg) {
            if ((this.createEmailMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmailMailingCompleted(this, new createEmailMailingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void updateEmailMailing(int mailingID, Mailing mailing, EmailContent content) {
            this.Invoke("updateEmailMailing", new object[] {
                        mailingID,
                        mailing,
                        content});
        }
        
        /// <remarks/>
        public void updateEmailMailingAsync(int mailingID, Mailing mailing, EmailContent content) {
            this.updateEmailMailingAsync(mailingID, mailing, content, null);
        }
        
        /// <remarks/>
        public void updateEmailMailingAsync(int mailingID, Mailing mailing, EmailContent content, object userState) {
            if ((this.updateEmailMailingOperationCompleted == null)) {
                this.updateEmailMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmailMailingOperationCompleted);
            }
            this.InvokeAsync("updateEmailMailing", new object[] {
                        mailingID,
                        mailing,
                        content}, this.updateEmailMailingOperationCompleted, userState);
        }
        
        private void OnupdateEmailMailingOperationCompleted(object arg) {
            if ((this.updateEmailMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmailMailingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void sendTestMessage(int mailingID, string[] testAddresses, string part) {
            this.Invoke("sendTestMessage", new object[] {
                        mailingID,
                        testAddresses,
                        part});
        }
        
        /// <remarks/>
        public void sendTestMessageAsync(int mailingID, string[] testAddresses, string part) {
            this.sendTestMessageAsync(mailingID, testAddresses, part, null);
        }
        
        /// <remarks/>
        public void sendTestMessageAsync(int mailingID, string[] testAddresses, string part, object userState) {
            if ((this.sendTestMessageOperationCompleted == null)) {
                this.sendTestMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTestMessageOperationCompleted);
            }
            this.InvokeAsync("sendTestMessage", new object[] {
                        mailingID,
                        testAddresses,
                        part}, this.sendTestMessageOperationCompleted, userState);
        }
        
        private void OnsendTestMessageOperationCompleted(object arg) {
            if ((this.sendTestMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTestMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void enableMailing(int mailingID) {
            this.Invoke("enableMailing", new object[] {
                        mailingID});
        }
        
        /// <remarks/>
        public void enableMailingAsync(int mailingID) {
            this.enableMailingAsync(mailingID, null);
        }
        
        /// <remarks/>
        public void enableMailingAsync(int mailingID, object userState) {
            if ((this.enableMailingOperationCompleted == null)) {
                this.enableMailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableMailingOperationCompleted);
            }
            this.InvokeAsync("enableMailing", new object[] {
                        mailingID}, this.enableMailingOperationCompleted, userState);
        }
        
        private void OnenableMailingOperationCompleted(object arg) {
            if ((this.enableMailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableMailingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string getMailingStatus(int mailingID) {
            object[] results = this.Invoke("getMailingStatus", new object[] {
                        mailingID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMailingStatusAsync(int mailingID) {
            this.getMailingStatusAsync(mailingID, null);
        }
        
        /// <remarks/>
        public void getMailingStatusAsync(int mailingID, object userState) {
            if ((this.getMailingStatusOperationCompleted == null)) {
                this.getMailingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailingStatusOperationCompleted);
            }
            this.InvokeAsync("getMailingStatus", new object[] {
                        mailingID}, this.getMailingStatusOperationCompleted, userState);
        }
        
        private void OngetMailingStatusOperationCompleted(object arg) {
            if ((this.getMailingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailingStatusCompleted(this, new getMailingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendMessageFromTemplateReturn")]
        public string sendMessageFromTemplate(int sendTemplateID, string recipientEmail, string[] nameValuePairs) {
            object[] results = this.Invoke("sendMessageFromTemplate", new object[] {
                        sendTemplateID,
                        recipientEmail,
                        nameValuePairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateAsync(int sendTemplateID, string recipientEmail, string[] nameValuePairs) {
            this.sendMessageFromTemplateAsync(sendTemplateID, recipientEmail, nameValuePairs, null);
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateAsync(int sendTemplateID, string recipientEmail, string[] nameValuePairs, object userState) {
            if ((this.sendMessageFromTemplateOperationCompleted == null)) {
                this.sendMessageFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageFromTemplateOperationCompleted);
            }
            this.InvokeAsync("sendMessageFromTemplate", new object[] {
                        sendTemplateID,
                        recipientEmail,
                        nameValuePairs}, this.sendMessageFromTemplateOperationCompleted, userState);
        }
        
        private void OnsendMessageFromTemplateOperationCompleted(object arg) {
            if ((this.sendMessageFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageFromTemplateCompleted(this, new sendMessageFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendMessageFromTemplateReturn")]
        public string sendMessageFromTemplateWithReferenceNumber(int sendTemplateID, string customerReferenceNumber, string[] nameValuePairs) {
            object[] results = this.Invoke("sendMessageFromTemplateWithReferenceNumber", new object[] {
                        sendTemplateID,
                        customerReferenceNumber,
                        nameValuePairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateWithReferenceNumberAsync(int sendTemplateID, string customerReferenceNumber, string[] nameValuePairs) {
            this.sendMessageFromTemplateWithReferenceNumberAsync(sendTemplateID, customerReferenceNumber, nameValuePairs, null);
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateWithReferenceNumberAsync(int sendTemplateID, string customerReferenceNumber, string[] nameValuePairs, object userState) {
            if ((this.sendMessageFromTemplateWithReferenceNumberOperationCompleted == null)) {
                this.sendMessageFromTemplateWithReferenceNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageFromTemplateWithReferenceNumberOperationCompleted);
            }
            this.InvokeAsync("sendMessageFromTemplateWithReferenceNumber", new object[] {
                        sendTemplateID,
                        customerReferenceNumber,
                        nameValuePairs}, this.sendMessageFromTemplateWithReferenceNumberOperationCompleted, userState);
        }
        
        private void OnsendMessageFromTemplateWithReferenceNumberOperationCompleted(object arg) {
            if ((this.sendMessageFromTemplateWithReferenceNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageFromTemplateWithReferenceNumberCompleted(this, new sendMessageFromTemplateWithReferenceNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendMessageFromTemplateReturn")]
        public string sendMessageFromTemplateWithReferenceNumberAndAddress(int sendTemplateID, string customerReferenceNumber, string recipientEmail, string[] nameValuePairs) {
            object[] results = this.Invoke("sendMessageFromTemplateWithReferenceNumberAndAddress", new object[] {
                        sendTemplateID,
                        customerReferenceNumber,
                        recipientEmail,
                        nameValuePairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateWithReferenceNumberAndAddressAsync(int sendTemplateID, string customerReferenceNumber, string recipientEmail, string[] nameValuePairs) {
            this.sendMessageFromTemplateWithReferenceNumberAndAddressAsync(sendTemplateID, customerReferenceNumber, recipientEmail, nameValuePairs, null);
        }
        
        /// <remarks/>
        public void sendMessageFromTemplateWithReferenceNumberAndAddressAsync(int sendTemplateID, string customerReferenceNumber, string recipientEmail, string[] nameValuePairs, object userState) {
            if ((this.sendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted == null)) {
                this.sendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted);
            }
            this.InvokeAsync("sendMessageFromTemplateWithReferenceNumberAndAddress", new object[] {
                        sendTemplateID,
                        customerReferenceNumber,
                        recipientEmail,
                        nameValuePairs}, this.sendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted, userState);
        }
        
        private void OnsendMessageFromTemplateWithReferenceNumberAndAddressOperationCompleted(object arg) {
            if ((this.sendMessageFromTemplateWithReferenceNumberAndAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageFromTemplateWithReferenceNumberAndAddressCompleted(this, new sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendMessagesFromTemplateReturn")]
        public int sendMessagesFromTemplate(int sendTemplateID, RecipientData[] recipientData) {
            object[] results = this.Invoke("sendMessagesFromTemplate", new object[] {
                        sendTemplateID,
                        recipientData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessagesFromTemplateAsync(int sendTemplateID, RecipientData[] recipientData) {
            this.sendMessagesFromTemplateAsync(sendTemplateID, recipientData, null);
        }
        
        /// <remarks/>
        public void sendMessagesFromTemplateAsync(int sendTemplateID, RecipientData[] recipientData, object userState) {
            if ((this.sendMessagesFromTemplateOperationCompleted == null)) {
                this.sendMessagesFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessagesFromTemplateOperationCompleted);
            }
            this.InvokeAsync("sendMessagesFromTemplate", new object[] {
                        sendTemplateID,
                        recipientData}, this.sendMessagesFromTemplateOperationCompleted, userState);
        }
        
        private void OnsendMessagesFromTemplateOperationCompleted(object arg) {
            if ((this.sendMessagesFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessagesFromTemplateCompleted(this, new sendMessagesFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendEmailMessagesReturn")]
        public int sendEmailMessages(int sendTemplateID, string mailingTitle, EmailContent emailContent, RecipientData[] recipientData) {
            object[] results = this.Invoke("sendEmailMessages", new object[] {
                        sendTemplateID,
                        mailingTitle,
                        emailContent,
                        recipientData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendEmailMessagesAsync(int sendTemplateID, string mailingTitle, EmailContent emailContent, RecipientData[] recipientData) {
            this.sendEmailMessagesAsync(sendTemplateID, mailingTitle, emailContent, recipientData, null);
        }
        
        /// <remarks/>
        public void sendEmailMessagesAsync(int sendTemplateID, string mailingTitle, EmailContent emailContent, RecipientData[] recipientData, object userState) {
            if ((this.sendEmailMessagesOperationCompleted == null)) {
                this.sendEmailMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendEmailMessagesOperationCompleted);
            }
            this.InvokeAsync("sendEmailMessages", new object[] {
                        sendTemplateID,
                        mailingTitle,
                        emailContent,
                        recipientData}, this.sendEmailMessagesOperationCompleted, userState);
        }
        
        private void OnsendEmailMessagesOperationCompleted(object arg) {
            if ((this.sendEmailMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendEmailMessagesCompleted(this, new sendEmailMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendSMSMessagesReturn")]
        public int sendSMSMessages(int sendTemplateID, string mailingTitle, SMSContent smsContent, RecipientData[] recipientData) {
            object[] results = this.Invoke("sendSMSMessages", new object[] {
                        sendTemplateID,
                        mailingTitle,
                        smsContent,
                        recipientData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendSMSMessagesAsync(int sendTemplateID, string mailingTitle, SMSContent smsContent, RecipientData[] recipientData) {
            this.sendSMSMessagesAsync(sendTemplateID, mailingTitle, smsContent, recipientData, null);
        }
        
        /// <remarks/>
        public void sendSMSMessagesAsync(int sendTemplateID, string mailingTitle, SMSContent smsContent, RecipientData[] recipientData, object userState) {
            if ((this.sendSMSMessagesOperationCompleted == null)) {
                this.sendSMSMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMSMessagesOperationCompleted);
            }
            this.InvokeAsync("sendSMSMessages", new object[] {
                        sendTemplateID,
                        mailingTitle,
                        smsContent,
                        recipientData}, this.sendSMSMessagesOperationCompleted, userState);
        }
        
        private void OnsendSMSMessagesOperationCompleted(object arg) {
            if ((this.sendSMSMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMSMessagesCompleted(this, new sendSMSMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("successCode")]
        public string updateSendTemplateDefinition(int id, SendTemplateBean sendTemplateBean) {
            object[] results = this.Invoke("updateSendTemplateDefinition", new object[] {
                        id,
                        sendTemplateBean});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateSendTemplateDefinitionAsync(int id, SendTemplateBean sendTemplateBean) {
            this.updateSendTemplateDefinitionAsync(id, sendTemplateBean, null);
        }
        
        /// <remarks/>
        public void updateSendTemplateDefinitionAsync(int id, SendTemplateBean sendTemplateBean, object userState) {
            if ((this.updateSendTemplateDefinitionOperationCompleted == null)) {
                this.updateSendTemplateDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSendTemplateDefinitionOperationCompleted);
            }
            this.InvokeAsync("updateSendTemplateDefinition", new object[] {
                        id,
                        sendTemplateBean}, this.updateSendTemplateDefinitionOperationCompleted, userState);
        }
        
        private void OnupdateSendTemplateDefinitionOperationCompleted(object arg) {
            if ((this.updateSendTemplateDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSendTemplateDefinitionCompleted(this, new updateSendTemplateDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("successCode")]
        public string updateSendTemplateContents(int id, string textContent, string htmlContent) {
            object[] results = this.Invoke("updateSendTemplateContents", new object[] {
                        id,
                        textContent,
                        htmlContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateSendTemplateContentsAsync(int id, string textContent, string htmlContent) {
            this.updateSendTemplateContentsAsync(id, textContent, htmlContent, null);
        }
        
        /// <remarks/>
        public void updateSendTemplateContentsAsync(int id, string textContent, string htmlContent, object userState) {
            if ((this.updateSendTemplateContentsOperationCompleted == null)) {
                this.updateSendTemplateContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSendTemplateContentsOperationCompleted);
            }
            this.InvokeAsync("updateSendTemplateContents", new object[] {
                        id,
                        textContent,
                        htmlContent}, this.updateSendTemplateContentsOperationCompleted, userState);
        }
        
        private void OnupdateSendTemplateContentsOperationCompleted(object arg) {
            if ((this.updateSendTemplateContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSendTemplateContentsCompleted(this, new updateSendTemplateContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("subscriptionInfo")]
        public SubscriptionInfo getRecipientInfo(int siteID, string address, string externalID) {
            object[] results = this.Invoke("getRecipientInfo", new object[] {
                        siteID,
                        address,
                        externalID});
            return ((SubscriptionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getRecipientInfoAsync(int siteID, string address, string externalID) {
            this.getRecipientInfoAsync(siteID, address, externalID, null);
        }
        
        /// <remarks/>
        public void getRecipientInfoAsync(int siteID, string address, string externalID, object userState) {
            if ((this.getRecipientInfoOperationCompleted == null)) {
                this.getRecipientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipientInfoOperationCompleted);
            }
            this.InvokeAsync("getRecipientInfo", new object[] {
                        siteID,
                        address,
                        externalID}, this.getRecipientInfoOperationCompleted, userState);
        }
        
        private void OngetRecipientInfoOperationCompleted(object arg) {
            if ((this.getRecipientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipientInfoCompleted(this, new getRecipientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("subscriptionInfo")]
        public SubscriptionInfo getRecipSubscriptionInfo(int siteID, string address) {
            object[] results = this.Invoke("getRecipSubscriptionInfo", new object[] {
                        siteID,
                        address});
            return ((SubscriptionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getRecipSubscriptionInfoAsync(int siteID, string address) {
            this.getRecipSubscriptionInfoAsync(siteID, address, null);
        }
        
        /// <remarks/>
        public void getRecipSubscriptionInfoAsync(int siteID, string address, object userState) {
            if ((this.getRecipSubscriptionInfoOperationCompleted == null)) {
                this.getRecipSubscriptionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecipSubscriptionInfoOperationCompleted);
            }
            this.InvokeAsync("getRecipSubscriptionInfo", new object[] {
                        siteID,
                        address}, this.getRecipSubscriptionInfoOperationCompleted, userState);
        }
        
        private void OngetRecipSubscriptionInfoOperationCompleted(object arg) {
            if ((this.getRecipSubscriptionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecipSubscriptionInfoCompleted(this, new getRecipSubscriptionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool createContentFolder(string path) {
            object[] results = this.Invoke("createContentFolder", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createContentFolderAsync(string path) {
            this.createContentFolderAsync(path, null);
        }
        
        /// <remarks/>
        public void createContentFolderAsync(string path, object userState) {
            if ((this.createContentFolderOperationCompleted == null)) {
                this.createContentFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContentFolderOperationCompleted);
            }
            this.InvokeAsync("createContentFolder", new object[] {
                        path}, this.createContentFolderOperationCompleted, userState);
        }
        
        private void OncreateContentFolderOperationCompleted(object arg) {
            if ((this.createContentFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContentFolderCompleted(this, new createContentFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void deleteContent(string path, string filename) {
            this.Invoke("deleteContent", new object[] {
                        path,
                        filename});
        }
        
        /// <remarks/>
        public void deleteContentAsync(string path, string filename) {
            this.deleteContentAsync(path, filename, null);
        }
        
        /// <remarks/>
        public void deleteContentAsync(string path, string filename, object userState) {
            if ((this.deleteContentOperationCompleted == null)) {
                this.deleteContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteContentOperationCompleted);
            }
            this.InvokeAsync("deleteContent", new object[] {
                        path,
                        filename}, this.deleteContentOperationCompleted, userState);
        }
        
        private void OndeleteContentOperationCompleted(object arg) {
            if ((this.deleteContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("jobID")]
        public int uploadContentFromSFTP(string path, FTPLocation ftpLocation) {
            object[] results = this.Invoke("uploadContentFromSFTP", new object[] {
                        path,
                        ftpLocation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void uploadContentFromSFTPAsync(string path, FTPLocation ftpLocation) {
            this.uploadContentFromSFTPAsync(path, ftpLocation, null);
        }
        
        /// <remarks/>
        public void uploadContentFromSFTPAsync(string path, FTPLocation ftpLocation, object userState) {
            if ((this.uploadContentFromSFTPOperationCompleted == null)) {
                this.uploadContentFromSFTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadContentFromSFTPOperationCompleted);
            }
            this.InvokeAsync("uploadContentFromSFTP", new object[] {
                        path,
                        ftpLocation}, this.uploadContentFromSFTPOperationCompleted, userState);
        }
        
        private void OnuploadContentFromSFTPOperationCompleted(object arg) {
            if ((this.uploadContentFromSFTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadContentFromSFTPCompleted(this, new uploadContentFromSFTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("jobID")]
        public int uploadContentFromHTTP(string path, string filename, HTTPLocation httpLocation) {
            object[] results = this.Invoke("uploadContentFromHTTP", new object[] {
                        path,
                        filename,
                        httpLocation});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void uploadContentFromHTTPAsync(string path, string filename, HTTPLocation httpLocation) {
            this.uploadContentFromHTTPAsync(path, filename, httpLocation, null);
        }
        
        /// <remarks/>
        public void uploadContentFromHTTPAsync(string path, string filename, HTTPLocation httpLocation, object userState) {
            if ((this.uploadContentFromHTTPOperationCompleted == null)) {
                this.uploadContentFromHTTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadContentFromHTTPOperationCompleted);
            }
            this.InvokeAsync("uploadContentFromHTTP", new object[] {
                        path,
                        filename,
                        httpLocation}, this.uploadContentFromHTTPOperationCompleted, userState);
        }
        
        private void OnuploadContentFromHTTPOperationCompleted(object arg) {
            if ((this.uploadContentFromHTTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadContentFromHTTPCompleted(this, new uploadContentFromHTTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string getContentUploadStatus(int jobID) {
            object[] results = this.Invoke("getContentUploadStatus", new object[] {
                        jobID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getContentUploadStatusAsync(int jobID) {
            this.getContentUploadStatusAsync(jobID, null);
        }
        
        /// <remarks/>
        public void getContentUploadStatusAsync(int jobID, object userState) {
            if ((this.getContentUploadStatusOperationCompleted == null)) {
                this.getContentUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContentUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getContentUploadStatus", new object[] {
                        jobID}, this.getContentUploadStatusOperationCompleted, userState);
        }
        
        private void OngetContentUploadStatusOperationCompleted(object arg) {
            if ((this.getContentUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContentUploadStatusCompleted(this, new getContentUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("contents")]
        public string[] listContents(string path) {
            object[] results = this.Invoke("listContents", new object[] {
                        path});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listContentsAsync(string path) {
            this.listContentsAsync(path, null);
        }
        
        /// <remarks/>
        public void listContentsAsync(string path, object userState) {
            if ((this.listContentsOperationCompleted == null)) {
                this.listContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistContentsOperationCompleted);
            }
            this.InvokeAsync("listContents", new object[] {
                        path}, this.listContentsOperationCompleted, userState);
        }
        
        private void OnlistContentsOperationCompleted(object arg) {
            if ((this.listContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listContentsCompleted(this, new listContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        [return: System.Xml.Serialization.SoapElementAttribute("content")]
        public Content getContent(string path, string filename) {
            object[] results = this.Invoke("getContent", new object[] {
                        path,
                        filename});
            return ((Content)(results[0]));
        }
        
        /// <remarks/>
        public void getContentAsync(string path, string filename) {
            this.getContentAsync(path, filename, null);
        }
        
        /// <remarks/>
        public void getContentAsync(string path, string filename, object userState) {
            if ((this.getContentOperationCompleted == null)) {
                this.getContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContentOperationCompleted);
            }
            this.InvokeAsync("getContent", new object[] {
                        path,
                        filename}, this.getContentOperationCompleted, userState);
        }
        
        private void OngetContentOperationCompleted(object arg) {
            if ((this.getContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContentCompleted(this, new getContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void createContent(string path, Content content) {
            this.Invoke("createContent", new object[] {
                        path,
                        content});
        }
        
        /// <remarks/>
        public void createContentAsync(string path, Content content) {
            this.createContentAsync(path, content, null);
        }
        
        /// <remarks/>
        public void createContentAsync(string path, Content content, object userState) {
            if ((this.createContentOperationCompleted == null)) {
                this.createContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContentOperationCompleted);
            }
            this.InvokeAsync("createContent", new object[] {
                        path,
                        content}, this.createContentOperationCompleted, userState);
        }
        
        private void OncreateContentOperationCompleted(object arg) {
            if ((this.createContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("authenticationValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.web.stormpost.skylist.com", ResponseNamespace="http://skylist.com/services/SoapRequestProcessor")]
        public void updateContent(string path, Content content) {
            this.Invoke("updateContent", new object[] {
                        path,
                        content});
        }
        
        /// <remarks/>
        public void updateContentAsync(string path, Content content) {
            this.updateContentAsync(path, content, null);
        }
        
        /// <remarks/>
        public void updateContentAsync(string path, Content content, object userState) {
            if ((this.updateContentOperationCompleted == null)) {
                this.updateContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateContentOperationCompleted);
            }
            this.InvokeAsync("updateContent", new object[] {
                        path,
                        content}, this.updateContentOperationCompleted, userState);
        }
        
        private void OnupdateContentOperationCompleted(object arg) {
            if ((this.updateContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class authentication : SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class Content {
        
        private string dataField;
        
        private string nameField;
        
        private string pathField;
        
        private string creatorField;
        
        private System.Nullable<System.DateTime> createtimeField;
        
        private System.Nullable<System.DateTime> lastmodifiedtimeField;
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createtime {
            get {
                return this.createtimeField;
            }
            set {
                this.createtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastmodifiedtime {
            get {
                return this.lastmodifiedtimeField;
            }
            set {
                this.lastmodifiedtimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class HTTPLocation {
        
        private string urlField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class FTPLocation {
        
        private string hostField;
        
        private int portField;
        
        private string userField;
        
        private string passwordField;
        
        private string directoryField;
        
        private string filePatternField;
        
        /// <remarks/>
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        public string filePattern {
            get {
                return this.filePatternField;
            }
            set {
                this.filePatternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class RecipField {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class SubscriptionInfo {
        
        private RecipField[] recipFieldsField;
        
        private ListSubscription[] listSubscriptionsField;
        
        /// <remarks/>
        public RecipField[] recipFields {
            get {
                return this.recipFieldsField;
            }
            set {
                this.recipFieldsField = value;
            }
        }
        
        /// <remarks/>
        public ListSubscription[] listSubscriptions {
            get {
                return this.listSubscriptionsField;
            }
            set {
                this.listSubscriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class ListSubscription {
        
        private System.Nullable<int> listIDField;
        
        private string listTitleField;
        
        // private System.Nullable<bool> subscribedField;
        
        // private System.Nullable<bool> confirmedField;

        private bool subscribedField;

        private bool confirmedField;

        private System.Nullable<System.DateTime> dateJoinedField;
        
        private System.Nullable<System.DateTime> dateUnsubbedField;
        
        private string sourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> listID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string listTitle {
            get {
                return this.listTitleField;
            }
            set {
                this.listTitleField = value;
            }
        }
        
        /*
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> subscribed {
            get {
                return this.subscribedField;
            }
            set {
                this.subscribedField = value;
            }
        }
        */

        /*
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> confirmed {
            get {
                return this.confirmedField;
            }
            set {
                this.confirmedField = value;
            }
        }
        */

        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public bool subscribed
        {
            get
            {
                try
                {
                    return this.subscribedField;
                }
                catch { return false; }
            }
            set
            {
                this.subscribedField = value;
            }
        }


        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public bool confirmed
        {
            get
            {
                try
                {
                    return this.confirmedField;
                }
                catch { return false; }
            }
            set
            {
                this.confirmedField = value;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateJoined {
            get {
                return this.dateJoinedField;
            }
            set {
                this.dateJoinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateUnsubbed {
            get {
                return this.dateUnsubbedField;
            }
            set {
                this.dateUnsubbedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class RecipientData {
        
        private string addressField;
        
        private string externalIDField;
        
        private string[] nameValuePairsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] nameValuePairs {
            get {
                return this.nameValuePairsField;
            }
            set {
                this.nameValuePairsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class EmailContent {
        
        private string subjectField;
        
        private string fromEmailField;
        
        private string fromNameField;
        
        private string toEmailField;
        
        private string toNameField;
        
        private string replyToEmailField;
        
        private string replyToNameField;
        
        private string charsetField;
        
        private string encodingField;
        
        private string htmlContentField;
        
        private string textContentField;
        
        private System.Nullable<int> unsubContentIDField;
        
        private System.Nullable<int> replyContentIDField;
        
        private System.Nullable<int> headerContentIDField;
        
        private System.Nullable<int> footerContentIDField;
        
        private System.Nullable<int> forwardToFriendContentIDField;
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string fromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string toEmail {
            get {
                return this.toEmailField;
            }
            set {
                this.toEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string toName {
            get {
                return this.toNameField;
            }
            set {
                this.toNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string replyToEmail {
            get {
                return this.replyToEmailField;
            }
            set {
                this.replyToEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string replyToName {
            get {
                return this.replyToNameField;
            }
            set {
                this.replyToNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string htmlContent {
            get {
                return this.htmlContentField;
            }
            set {
                this.htmlContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string textContent {
            get {
                return this.textContentField;
            }
            set {
                this.textContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> unsubContentID {
            get {
                return this.unsubContentIDField;
            }
            set {
                this.unsubContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> replyContentID {
            get {
                return this.replyContentIDField;
            }
            set {
                this.replyContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> headerContentID {
            get {
                return this.headerContentIDField;
            }
            set {
                this.headerContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> footerContentID {
            get {
                return this.footerContentIDField;
            }
            set {
                this.footerContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> forwardToFriendContentID {
            get {
                return this.forwardToFriendContentIDField;
            }
            set {
                this.forwardToFriendContentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class SMSContent {
        
        private System.Nullable<bool> useUnicodeField;
        
        private string contentField;
        
        private System.Nullable<int> headerContentIDField;
        
        private System.Nullable<int> footerContentIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> useUnicode {
            get {
                return this.useUnicodeField;
            }
            set {
                this.useUnicodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> headerContentID {
            get {
                return this.headerContentIDField;
            }
            set {
                this.headerContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> footerContentID {
            get {
                return this.footerContentIDField;
            }
            set {
                this.footerContentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class FacebookContent {
        
        private string typeField;
        
        private string titleField;
        
        private string bodyField;
        
        private string image1Field;
        
        private string url1Field;
        
        private string image2Field;
        
        private string url2Field;
        
        private string image3Field;
        
        private string url3Field;
        
        private string image4Field;
        
        private string url4Field;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string image1 {
            get {
                return this.image1Field;
            }
            set {
                this.image1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url1 {
            get {
                return this.url1Field;
            }
            set {
                this.url1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string image2 {
            get {
                return this.image2Field;
            }
            set {
                this.image2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url2 {
            get {
                return this.url2Field;
            }
            set {
                this.url2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string image3 {
            get {
                return this.image3Field;
            }
            set {
                this.image3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url3 {
            get {
                return this.url3Field;
            }
            set {
                this.url3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string image4 {
            get {
                return this.image4Field;
            }
            set {
                this.image4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url4 {
            get {
                return this.url4Field;
            }
            set {
                this.url4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class Mailing {
        
        private string titleField;
        
        private string externalIDField;
        
        private string commentField;
        
        private string protocolField;
        
        private int campaignIDField;
        
        private int brandIDField;
        
        private System.Nullable<int> listIDField;
        
        private string conditionOperatorField;
        
        private string condition1ColumnField;
        
        private string condition1OperatorField;
        
        private string condition1ValueField;
        
        private string condition2ColumnField;
        
        private string condition2OperatorField;
        
        private string condition2ValueField;
        
        private string condition3ColumnField;
        
        private string condition3OperatorField;
        
        private string condition3ValueField;
        
        private string condition4ColumnField;
        
        private string condition4OperatorField;
        
        private string condition4ValueField;
        
        private string condition5ColumnField;
        
        private string condition5OperatorField;
        
        private string condition5ValueField;
        
        private System.Nullable<int> maxRecipientsField;
        
        private string[] seedsField;
        
        private string[] blockDomainsField;
        
        private int[] purgeListsField;
        
        private int[] purgeSuppressionListsField;
        
        private System.Nullable<System.DateTime> queueTimeField;
        
        private string trackTypeField;
        
        private string openTrackTypeField;
        
        private string clickStreamTypeField;
        
        private string advertiserNameField;
        
        private string unsubReportsAddressField;
        
        private System.Nullable<int> unsubReportsSizeField;
        
        private string priorityField;
        
        private int[] additionalListsField;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public int campaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public int brandID {
            get {
                return this.brandIDField;
            }
            set {
                this.brandIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> listID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string conditionOperator {
            get {
                return this.conditionOperatorField;
            }
            set {
                this.conditionOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition1Column {
            get {
                return this.condition1ColumnField;
            }
            set {
                this.condition1ColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition1Operator {
            get {
                return this.condition1OperatorField;
            }
            set {
                this.condition1OperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition1Value {
            get {
                return this.condition1ValueField;
            }
            set {
                this.condition1ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition2Column {
            get {
                return this.condition2ColumnField;
            }
            set {
                this.condition2ColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition2Operator {
            get {
                return this.condition2OperatorField;
            }
            set {
                this.condition2OperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition2Value {
            get {
                return this.condition2ValueField;
            }
            set {
                this.condition2ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition3Column {
            get {
                return this.condition3ColumnField;
            }
            set {
                this.condition3ColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition3Operator {
            get {
                return this.condition3OperatorField;
            }
            set {
                this.condition3OperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition3Value {
            get {
                return this.condition3ValueField;
            }
            set {
                this.condition3ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition4Column {
            get {
                return this.condition4ColumnField;
            }
            set {
                this.condition4ColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition4Operator {
            get {
                return this.condition4OperatorField;
            }
            set {
                this.condition4OperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition4Value {
            get {
                return this.condition4ValueField;
            }
            set {
                this.condition4ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition5Column {
            get {
                return this.condition5ColumnField;
            }
            set {
                this.condition5ColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition5Operator {
            get {
                return this.condition5OperatorField;
            }
            set {
                this.condition5OperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string condition5Value {
            get {
                return this.condition5ValueField;
            }
            set {
                this.condition5ValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> maxRecipients {
            get {
                return this.maxRecipientsField;
            }
            set {
                this.maxRecipientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] seeds {
            get {
                return this.seedsField;
            }
            set {
                this.seedsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] blockDomains {
            get {
                return this.blockDomainsField;
            }
            set {
                this.blockDomainsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public int[] purgeLists {
            get {
                return this.purgeListsField;
            }
            set {
                this.purgeListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public int[] purgeSuppressionLists {
            get {
                return this.purgeSuppressionListsField;
            }
            set {
                this.purgeSuppressionListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> queueTime {
            get {
                return this.queueTimeField;
            }
            set {
                this.queueTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string trackType {
            get {
                return this.trackTypeField;
            }
            set {
                this.trackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string openTrackType {
            get {
                return this.openTrackTypeField;
            }
            set {
                this.openTrackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string clickStreamType {
            get {
                return this.clickStreamTypeField;
            }
            set {
                this.clickStreamTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string advertiserName {
            get {
                return this.advertiserNameField;
            }
            set {
                this.advertiserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string unsubReportsAddress {
            get {
                return this.unsubReportsAddressField;
            }
            set {
                this.unsubReportsAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> unsubReportsSize {
            get {
                return this.unsubReportsSizeField;
            }
            set {
                this.unsubReportsSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public int[] additionalLists {
            get {
                return this.additionalListsField;
            }
            set {
                this.additionalListsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class MailingReport {
        
        private int mailingIDField;
        
        private string mailingTitleField;
        
        private string campaignTitleField;
        
        private string brandTitleField;
        
        private string listTitleField;
        
        private string[] partsField;
        
        private string statusField;
        
        private System.DateTime scheduledTimeField;
        
        private System.DateTime sentTimeField;
        
        private string queueCommentField;
        
        private int scheduledCountField;
        
        private int deliveredCountField;
        
        private double deliveredRateField;
        
        private int opensCountField;
        
        private double openRateField;
        
        private double clicksCountField;
        
        private double clickRateField;
        
        private int unsubsCountField;
        
        private double unsubRateField;
        
        private int optoutsCountField;
        
        private double optoutRateField;
        
        private string customerReferenceNumberField;
        
        private string parentIDField;
        
        private string aBSplitField;
        
        private string creatorField;
        
        private string domainField;
        
        private string subjectField;
        
        private string fromNameField;
        
        private string campaignCommentField;
        
        private int bounceCountField;
        
        private int blockBounceCountField;
        
        private int softBounceCountField;
        
        private int hardBounceCountField;
        
        private string channelField;
        
        /// <remarks/>
        public int mailingID {
            get {
                return this.mailingIDField;
            }
            set {
                this.mailingIDField = value;
            }
        }
        
        /// <remarks/>
        public string mailingTitle {
            get {
                return this.mailingTitleField;
            }
            set {
                this.mailingTitleField = value;
            }
        }
        
        /// <remarks/>
        public string campaignTitle {
            get {
                return this.campaignTitleField;
            }
            set {
                this.campaignTitleField = value;
            }
        }
        
        /// <remarks/>
        public string brandTitle {
            get {
                return this.brandTitleField;
            }
            set {
                this.brandTitleField = value;
            }
        }
        
        /// <remarks/>
        public string listTitle {
            get {
                return this.listTitleField;
            }
            set {
                this.listTitleField = value;
            }
        }
        
        /// <remarks/>
        public string[] parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime scheduledTime {
            get {
                return this.scheduledTimeField;
            }
            set {
                this.scheduledTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime sentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string queueComment {
            get {
                return this.queueCommentField;
            }
            set {
                this.queueCommentField = value;
            }
        }
        
        /// <remarks/>
        public int scheduledCount {
            get {
                return this.scheduledCountField;
            }
            set {
                this.scheduledCountField = value;
            }
        }
        
        /// <remarks/>
        public int deliveredCount {
            get {
                return this.deliveredCountField;
            }
            set {
                this.deliveredCountField = value;
            }
        }
        
        /// <remarks/>
        public double deliveredRate {
            get {
                return this.deliveredRateField;
            }
            set {
                this.deliveredRateField = value;
            }
        }
        
        /// <remarks/>
        public int opensCount {
            get {
                return this.opensCountField;
            }
            set {
                this.opensCountField = value;
            }
        }
        
        /// <remarks/>
        public double openRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public double clicksCount {
            get {
                return this.clicksCountField;
            }
            set {
                this.clicksCountField = value;
            }
        }
        
        /// <remarks/>
        public double clickRate {
            get {
                return this.clickRateField;
            }
            set {
                this.clickRateField = value;
            }
        }
        
        /// <remarks/>
        public int unsubsCount {
            get {
                return this.unsubsCountField;
            }
            set {
                this.unsubsCountField = value;
            }
        }
        
        /// <remarks/>
        public double unsubRate {
            get {
                return this.unsubRateField;
            }
            set {
                this.unsubRateField = value;
            }
        }
        
        /// <remarks/>
        public int optoutsCount {
            get {
                return this.optoutsCountField;
            }
            set {
                this.optoutsCountField = value;
            }
        }
        
        /// <remarks/>
        public double optoutRate {
            get {
                return this.optoutRateField;
            }
            set {
                this.optoutRateField = value;
            }
        }
        
        /// <remarks/>
        public string customerReferenceNumber {
            get {
                return this.customerReferenceNumberField;
            }
            set {
                this.customerReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string parentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string ABSplit {
            get {
                return this.aBSplitField;
            }
            set {
                this.aBSplitField = value;
            }
        }
        
        /// <remarks/>
        public string creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string fromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string campaignComment {
            get {
                return this.campaignCommentField;
            }
            set {
                this.campaignCommentField = value;
            }
        }
        
        /// <remarks/>
        public int bounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public int blockBounceCount {
            get {
                return this.blockBounceCountField;
            }
            set {
                this.blockBounceCountField = value;
            }
        }
        
        /// <remarks/>
        public int softBounceCount {
            get {
                return this.softBounceCountField;
            }
            set {
                this.softBounceCountField = value;
            }
        }
        
        /// <remarks/>
        public int hardBounceCount {
            get {
                return this.hardBounceCountField;
            }
            set {
                this.hardBounceCountField = value;
            }
        }
        
        /// <remarks/>
        public string channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class SummaryCampaignReport {
        
        private int campainIDField;
        
        private string campaignTitleField;
        
        private System.DateTime createTimeField;
        
        private string externalIDField;
        
        private int scheduledCountField;
        
        private int deliveredCountField;
        
        private double deliveredRateField;
        
        private int opensCountField;
        
        private double openRateField;
        
        private int clicksCountField;
        
        private double clickRateField;
        
        private int unsubsCountField;
        
        private double unsubRateField;
        
        private int optoutsCountField;
        
        private double optoutRateField;
        
        private int scompsCountField;
        
        private int softBouncedCountField;
        
        private int hardBouncedCountField;
        
        private int blockBouncedCountField;
        
        private int uniqueClicksCountField;
        
        private int uniqueUsersCountField;
        
        /// <remarks/>
        public int campainID {
            get {
                return this.campainIDField;
            }
            set {
                this.campainIDField = value;
            }
        }
        
        /// <remarks/>
        public string campaignTitle {
            get {
                return this.campaignTitleField;
            }
            set {
                this.campaignTitleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        public int scheduledCount {
            get {
                return this.scheduledCountField;
            }
            set {
                this.scheduledCountField = value;
            }
        }
        
        /// <remarks/>
        public int deliveredCount {
            get {
                return this.deliveredCountField;
            }
            set {
                this.deliveredCountField = value;
            }
        }
        
        /// <remarks/>
        public double deliveredRate {
            get {
                return this.deliveredRateField;
            }
            set {
                this.deliveredRateField = value;
            }
        }
        
        /// <remarks/>
        public int opensCount {
            get {
                return this.opensCountField;
            }
            set {
                this.opensCountField = value;
            }
        }
        
        /// <remarks/>
        public double openRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public int clicksCount {
            get {
                return this.clicksCountField;
            }
            set {
                this.clicksCountField = value;
            }
        }
        
        /// <remarks/>
        public double clickRate {
            get {
                return this.clickRateField;
            }
            set {
                this.clickRateField = value;
            }
        }
        
        /// <remarks/>
        public int unsubsCount {
            get {
                return this.unsubsCountField;
            }
            set {
                this.unsubsCountField = value;
            }
        }
        
        /// <remarks/>
        public double unsubRate {
            get {
                return this.unsubRateField;
            }
            set {
                this.unsubRateField = value;
            }
        }
        
        /// <remarks/>
        public int optoutsCount {
            get {
                return this.optoutsCountField;
            }
            set {
                this.optoutsCountField = value;
            }
        }
        
        /// <remarks/>
        public double optoutRate {
            get {
                return this.optoutRateField;
            }
            set {
                this.optoutRateField = value;
            }
        }
        
        /// <remarks/>
        public int scompsCount {
            get {
                return this.scompsCountField;
            }
            set {
                this.scompsCountField = value;
            }
        }
        
        /// <remarks/>
        public int softBouncedCount {
            get {
                return this.softBouncedCountField;
            }
            set {
                this.softBouncedCountField = value;
            }
        }
        
        /// <remarks/>
        public int hardBouncedCount {
            get {
                return this.hardBouncedCountField;
            }
            set {
                this.hardBouncedCountField = value;
            }
        }
        
        /// <remarks/>
        public int blockBouncedCount {
            get {
                return this.blockBouncedCountField;
            }
            set {
                this.blockBouncedCountField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueClicksCount {
            get {
                return this.uniqueClicksCountField;
            }
            set {
                this.uniqueClicksCountField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueUsersCount {
            get {
                return this.uniqueUsersCountField;
            }
            set {
                this.uniqueUsersCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class SummaryMailingReport {
        
        private int mailingIDField;
        
        private string mailingTitleField;
        
        private string campaignTitleField;
        
        private string brandTitleField;
        
        private string listTitleField;
        
        private string[] partsField;
        
        private string statusField;
        
        private System.DateTime scheduledTimeField;
        
        private System.DateTime sentTimeField;
        
        private string queueCommentField;
        
        private int scheduledCountField;
        
        private int deliveredCountField;
        
        private double deliveredRateField;
        
        private int opensCountField;
        
        private double openRateField;
        
        private double clicksCountField;
        
        private double clickRateField;
        
        private int unsubsCountField;
        
        private double unsubRateField;
        
        private int optoutsCountField;
        
        private double optoutRateField;
        
        private string customerReferenceNumberField;
        
        private string parentIDField;
        
        private string aBSplitField;
        
        private string creatorField;
        
        private string domainField;
        
        private string subjectField;
        
        private string fromNameField;
        
        private string campaignCommentField;
        
        private int bounceCountField;
        
        private int blockBounceCountField;
        
        /// <remarks/>
        public int mailingID {
            get {
                return this.mailingIDField;
            }
            set {
                this.mailingIDField = value;
            }
        }
        
        /// <remarks/>
        public string mailingTitle {
            get {
                return this.mailingTitleField;
            }
            set {
                this.mailingTitleField = value;
            }
        }
        
        /// <remarks/>
        public string campaignTitle {
            get {
                return this.campaignTitleField;
            }
            set {
                this.campaignTitleField = value;
            }
        }
        
        /// <remarks/>
        public string brandTitle {
            get {
                return this.brandTitleField;
            }
            set {
                this.brandTitleField = value;
            }
        }
        
        /// <remarks/>
        public string listTitle {
            get {
                return this.listTitleField;
            }
            set {
                this.listTitleField = value;
            }
        }
        
        /// <remarks/>
        public string[] parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime scheduledTime {
            get {
                return this.scheduledTimeField;
            }
            set {
                this.scheduledTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime sentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string queueComment {
            get {
                return this.queueCommentField;
            }
            set {
                this.queueCommentField = value;
            }
        }
        
        /// <remarks/>
        public int scheduledCount {
            get {
                return this.scheduledCountField;
            }
            set {
                this.scheduledCountField = value;
            }
        }
        
        /// <remarks/>
        public int deliveredCount {
            get {
                return this.deliveredCountField;
            }
            set {
                this.deliveredCountField = value;
            }
        }
        
        /// <remarks/>
        public double deliveredRate {
            get {
                return this.deliveredRateField;
            }
            set {
                this.deliveredRateField = value;
            }
        }
        
        /// <remarks/>
        public int opensCount {
            get {
                return this.opensCountField;
            }
            set {
                this.opensCountField = value;
            }
        }
        
        /// <remarks/>
        public double openRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public double clicksCount {
            get {
                return this.clicksCountField;
            }
            set {
                this.clicksCountField = value;
            }
        }
        
        /// <remarks/>
        public double clickRate {
            get {
                return this.clickRateField;
            }
            set {
                this.clickRateField = value;
            }
        }
        
        /// <remarks/>
        public int unsubsCount {
            get {
                return this.unsubsCountField;
            }
            set {
                this.unsubsCountField = value;
            }
        }
        
        /// <remarks/>
        public double unsubRate {
            get {
                return this.unsubRateField;
            }
            set {
                this.unsubRateField = value;
            }
        }
        
        /// <remarks/>
        public int optoutsCount {
            get {
                return this.optoutsCountField;
            }
            set {
                this.optoutsCountField = value;
            }
        }
        
        /// <remarks/>
        public double optoutRate {
            get {
                return this.optoutRateField;
            }
            set {
                this.optoutRateField = value;
            }
        }
        
        /// <remarks/>
        public string customerReferenceNumber {
            get {
                return this.customerReferenceNumberField;
            }
            set {
                this.customerReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string parentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string ABSplit {
            get {
                return this.aBSplitField;
            }
            set {
                this.aBSplitField = value;
            }
        }
        
        /// <remarks/>
        public string creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string fromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string campaignComment {
            get {
                return this.campaignCommentField;
            }
            set {
                this.campaignCommentField = value;
            }
        }
        
        /// <remarks/>
        public int bounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public int blockBounceCount {
            get {
                return this.blockBounceCountField;
            }
            set {
                this.blockBounceCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class IdAndTitle {
        
        private int idField;
        
        private string titleField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class LinkReport {
        
        private int linkIDField;
        
        private string urlField;
        
        private string partField;
        
        private int totalClicksField;
        
        private int uniqueClicksField;
        
        private double successRateField;
        
        private int totalCSClicksField;
        
        private double totalCSAmountField;
        
        /// <remarks/>
        public int linkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string part {
            get {
                return this.partField;
            }
            set {
                this.partField = value;
            }
        }
        
        /// <remarks/>
        public int totalClicks {
            get {
                return this.totalClicksField;
            }
            set {
                this.totalClicksField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueClicks {
            get {
                return this.uniqueClicksField;
            }
            set {
                this.uniqueClicksField = value;
            }
        }
        
        /// <remarks/>
        public double successRate {
            get {
                return this.successRateField;
            }
            set {
                this.successRateField = value;
            }
        }
        
        /// <remarks/>
        public int totalCSClicks {
            get {
                return this.totalCSClicksField;
            }
            set {
                this.totalCSClicksField = value;
            }
        }
        
        /// <remarks/>
        public double totalCSAmount {
            get {
                return this.totalCSAmountField;
            }
            set {
                this.totalCSAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class MailingPartReport {
        
        private string partField;
        
        private int numTrackedUrlsField;
        
        private int totalClicksField;
        
        private int uniqueClicksField;
        
        private int uniqueUsersField;
        
        private int totalOpensField;
        
        /// <remarks/>
        public string part {
            get {
                return this.partField;
            }
            set {
                this.partField = value;
            }
        }
        
        /// <remarks/>
        public int numTrackedUrls {
            get {
                return this.numTrackedUrlsField;
            }
            set {
                this.numTrackedUrlsField = value;
            }
        }
        
        /// <remarks/>
        public int totalClicks {
            get {
                return this.totalClicksField;
            }
            set {
                this.totalClicksField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueClicks {
            get {
                return this.uniqueClicksField;
            }
            set {
                this.uniqueClicksField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueUsers {
            get {
                return this.uniqueUsersField;
            }
            set {
                this.uniqueUsersField = value;
            }
        }
        
        /// <remarks/>
        public int totalOpens {
            get {
                return this.totalOpensField;
            }
            set {
                this.totalOpensField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class DetailedMailingReport {
        
        private bool countNumRecipsField;
        
        private int mailingIDField;
        
        private string mailingTitleField;
        
        private string customerReferenceNumberField;
        
        private string mailingSubjectField;
        
        private string campaignTitleField;
        
        private string campaignReferenceNumberField;
        
        private string listTitleField;
        
        private string brandTitleField;
        
        private string contentsField;
        
        private int sendTemplateIDField;
        
        private string[] blockDomainsField;
        
        private string[] additionalListsField;
        
        private string[] purgeListsField;
        
        private string[] purgeMailingsField;
        
        private string[] suppressionListsField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private System.Nullable<System.DateTime> sentTimeField;
        
        private System.Nullable<System.DateTime> sendStartTimeField;
        
        private System.Nullable<System.DateTime> sendFinishTimeField;
        
        private System.Nullable<System.DateTime> queueTimeField;
        
        private int totalQueueTimeField;
        
        private int maxRecipsField;
        
        private string clickStreamTypeField;
        
        private string mailingStatusField;
        
        private int retriesRemainingField;
        
        private bool archivedField;
        
        private string queueCommentField;
        
        private bool aggregateDeliveryCountsField;
        
        private int scheduledCountField;
        
        private int failedCountField;
        
        private double failedPercentField;
        
        private int deliveredCountField;
        
        private double deliveredPercentField;
        
        private int unsentCountField;
        
        private double unsentPercentField;
        
        private int softCountField;
        
        private double softPercentField;
        
        private int hardCountField;
        
        private double hardPercentField;
        
        private int blockedCountField;
        
        private double blockedPercentField;
        
        private int totalBounceCountField;
        
        private double totalBouncePercentField;
        
        private int trackedLinkCountField;
        
        private int openLinkCountField;
        
        private int uniqueOpensCountField;
        
        private double openRateField;
        
        private int totalClicksCountField;
        
        private double totalClicksPercentField;
        
        private int uniqueClicksCountField;
        
        private double clickRateField;
        
        private int uniqueUsersCountField;
        
        private double uniqueUsersPercentField;
        
        private int unsubscribeResponsesCountField;
        
        private double unsubscribeResponsesPercentField;
        
        private int complaintResponsesCountField;
        
        private double complaintResponsesPercentField;
        
        private int scompResponsesCountField;
        
        private double scompResponsesPercentField;
        
        private int replyResponsesCountField;
        
        private double replyResponsesPercentField;
        
        private int totalResponsesCountField;
        
        private double totalResponsesPercentField;
        
        private int confirmCountField;
        
        private double confirmRateField;
        
        private MailingPartReport[] mailingPartsField;
        
        private LinkReport[] linkReportField;
        
        /// <remarks/>
        public bool countNumRecips {
            get {
                return this.countNumRecipsField;
            }
            set {
                this.countNumRecipsField = value;
            }
        }
        
        /// <remarks/>
        public int mailingID {
            get {
                return this.mailingIDField;
            }
            set {
                this.mailingIDField = value;
            }
        }
        
        /// <remarks/>
        public string mailingTitle {
            get {
                return this.mailingTitleField;
            }
            set {
                this.mailingTitleField = value;
            }
        }
        
        /// <remarks/>
        public string customerReferenceNumber {
            get {
                return this.customerReferenceNumberField;
            }
            set {
                this.customerReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string mailingSubject {
            get {
                return this.mailingSubjectField;
            }
            set {
                this.mailingSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string campaignTitle {
            get {
                return this.campaignTitleField;
            }
            set {
                this.campaignTitleField = value;
            }
        }
        
        /// <remarks/>
        public string campaignReferenceNumber {
            get {
                return this.campaignReferenceNumberField;
            }
            set {
                this.campaignReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string listTitle {
            get {
                return this.listTitleField;
            }
            set {
                this.listTitleField = value;
            }
        }
        
        /// <remarks/>
        public string brandTitle {
            get {
                return this.brandTitleField;
            }
            set {
                this.brandTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public int sendTemplateID {
            get {
                return this.sendTemplateIDField;
            }
            set {
                this.sendTemplateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] blockDomains {
            get {
                return this.blockDomainsField;
            }
            set {
                this.blockDomainsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] additionalLists {
            get {
                return this.additionalListsField;
            }
            set {
                this.additionalListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] purgeLists {
            get {
                return this.purgeListsField;
            }
            set {
                this.purgeListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] purgeMailings {
            get {
                return this.purgeMailingsField;
            }
            set {
                this.purgeMailingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] suppressionLists {
            get {
                return this.suppressionListsField;
            }
            set {
                this.suppressionListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sendStartTime {
            get {
                return this.sendStartTimeField;
            }
            set {
                this.sendStartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sendFinishTime {
            get {
                return this.sendFinishTimeField;
            }
            set {
                this.sendFinishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> queueTime {
            get {
                return this.queueTimeField;
            }
            set {
                this.queueTimeField = value;
            }
        }
        
        /// <remarks/>
        public int totalQueueTime {
            get {
                return this.totalQueueTimeField;
            }
            set {
                this.totalQueueTimeField = value;
            }
        }
        
        /// <remarks/>
        public int maxRecips {
            get {
                return this.maxRecipsField;
            }
            set {
                this.maxRecipsField = value;
            }
        }
        
        /// <remarks/>
        public string clickStreamType {
            get {
                return this.clickStreamTypeField;
            }
            set {
                this.clickStreamTypeField = value;
            }
        }
        
        /// <remarks/>
        public string mailingStatus {
            get {
                return this.mailingStatusField;
            }
            set {
                this.mailingStatusField = value;
            }
        }
        
        /// <remarks/>
        public int retriesRemaining {
            get {
                return this.retriesRemainingField;
            }
            set {
                this.retriesRemainingField = value;
            }
        }
        
        /// <remarks/>
        public bool archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public string queueComment {
            get {
                return this.queueCommentField;
            }
            set {
                this.queueCommentField = value;
            }
        }
        
        /// <remarks/>
        public bool aggregateDeliveryCounts {
            get {
                return this.aggregateDeliveryCountsField;
            }
            set {
                this.aggregateDeliveryCountsField = value;
            }
        }
        
        /// <remarks/>
        public int scheduledCount {
            get {
                return this.scheduledCountField;
            }
            set {
                this.scheduledCountField = value;
            }
        }
        
        /// <remarks/>
        public int failedCount {
            get {
                return this.failedCountField;
            }
            set {
                this.failedCountField = value;
            }
        }
        
        /// <remarks/>
        public double failedPercent {
            get {
                return this.failedPercentField;
            }
            set {
                this.failedPercentField = value;
            }
        }
        
        /// <remarks/>
        public int deliveredCount {
            get {
                return this.deliveredCountField;
            }
            set {
                this.deliveredCountField = value;
            }
        }
        
        /// <remarks/>
        public double deliveredPercent {
            get {
                return this.deliveredPercentField;
            }
            set {
                this.deliveredPercentField = value;
            }
        }
        
        /// <remarks/>
        public int unsentCount {
            get {
                return this.unsentCountField;
            }
            set {
                this.unsentCountField = value;
            }
        }
        
        /// <remarks/>
        public double unsentPercent {
            get {
                return this.unsentPercentField;
            }
            set {
                this.unsentPercentField = value;
            }
        }
        
        /// <remarks/>
        public int softCount {
            get {
                return this.softCountField;
            }
            set {
                this.softCountField = value;
            }
        }
        
        /// <remarks/>
        public double softPercent {
            get {
                return this.softPercentField;
            }
            set {
                this.softPercentField = value;
            }
        }
        
        /// <remarks/>
        public int hardCount {
            get {
                return this.hardCountField;
            }
            set {
                this.hardCountField = value;
            }
        }
        
        /// <remarks/>
        public double hardPercent {
            get {
                return this.hardPercentField;
            }
            set {
                this.hardPercentField = value;
            }
        }
        
        /// <remarks/>
        public int blockedCount {
            get {
                return this.blockedCountField;
            }
            set {
                this.blockedCountField = value;
            }
        }
        
        /// <remarks/>
        public double blockedPercent {
            get {
                return this.blockedPercentField;
            }
            set {
                this.blockedPercentField = value;
            }
        }
        
        /// <remarks/>
        public int totalBounceCount {
            get {
                return this.totalBounceCountField;
            }
            set {
                this.totalBounceCountField = value;
            }
        }
        
        /// <remarks/>
        public double totalBouncePercent {
            get {
                return this.totalBouncePercentField;
            }
            set {
                this.totalBouncePercentField = value;
            }
        }
        
        /// <remarks/>
        public int trackedLinkCount {
            get {
                return this.trackedLinkCountField;
            }
            set {
                this.trackedLinkCountField = value;
            }
        }
        
        /// <remarks/>
        public int openLinkCount {
            get {
                return this.openLinkCountField;
            }
            set {
                this.openLinkCountField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueOpensCount {
            get {
                return this.uniqueOpensCountField;
            }
            set {
                this.uniqueOpensCountField = value;
            }
        }
        
        /// <remarks/>
        public double openRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public int totalClicksCount {
            get {
                return this.totalClicksCountField;
            }
            set {
                this.totalClicksCountField = value;
            }
        }
        
        /// <remarks/>
        public double totalClicksPercent {
            get {
                return this.totalClicksPercentField;
            }
            set {
                this.totalClicksPercentField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueClicksCount {
            get {
                return this.uniqueClicksCountField;
            }
            set {
                this.uniqueClicksCountField = value;
            }
        }
        
        /// <remarks/>
        public double clickRate {
            get {
                return this.clickRateField;
            }
            set {
                this.clickRateField = value;
            }
        }
        
        /// <remarks/>
        public int uniqueUsersCount {
            get {
                return this.uniqueUsersCountField;
            }
            set {
                this.uniqueUsersCountField = value;
            }
        }
        
        /// <remarks/>
        public double uniqueUsersPercent {
            get {
                return this.uniqueUsersPercentField;
            }
            set {
                this.uniqueUsersPercentField = value;
            }
        }
        
        /// <remarks/>
        public int unsubscribeResponsesCount {
            get {
                return this.unsubscribeResponsesCountField;
            }
            set {
                this.unsubscribeResponsesCountField = value;
            }
        }
        
        /// <remarks/>
        public double unsubscribeResponsesPercent {
            get {
                return this.unsubscribeResponsesPercentField;
            }
            set {
                this.unsubscribeResponsesPercentField = value;
            }
        }
        
        /// <remarks/>
        public int complaintResponsesCount {
            get {
                return this.complaintResponsesCountField;
            }
            set {
                this.complaintResponsesCountField = value;
            }
        }
        
        /// <remarks/>
        public double complaintResponsesPercent {
            get {
                return this.complaintResponsesPercentField;
            }
            set {
                this.complaintResponsesPercentField = value;
            }
        }
        
        /// <remarks/>
        public int scompResponsesCount {
            get {
                return this.scompResponsesCountField;
            }
            set {
                this.scompResponsesCountField = value;
            }
        }
        
        /// <remarks/>
        public double scompResponsesPercent {
            get {
                return this.scompResponsesPercentField;
            }
            set {
                this.scompResponsesPercentField = value;
            }
        }
        
        /// <remarks/>
        public int replyResponsesCount {
            get {
                return this.replyResponsesCountField;
            }
            set {
                this.replyResponsesCountField = value;
            }
        }
        
        /// <remarks/>
        public double replyResponsesPercent {
            get {
                return this.replyResponsesPercentField;
            }
            set {
                this.replyResponsesPercentField = value;
            }
        }
        
        /// <remarks/>
        public int totalResponsesCount {
            get {
                return this.totalResponsesCountField;
            }
            set {
                this.totalResponsesCountField = value;
            }
        }
        
        /// <remarks/>
        public double totalResponsesPercent {
            get {
                return this.totalResponsesPercentField;
            }
            set {
                this.totalResponsesPercentField = value;
            }
        }
        
        /// <remarks/>
        public int confirmCount {
            get {
                return this.confirmCountField;
            }
            set {
                this.confirmCountField = value;
            }
        }
        
        /// <remarks/>
        public double confirmRate {
            get {
                return this.confirmRateField;
            }
            set {
                this.confirmRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public MailingPartReport[] mailingParts {
            get {
                return this.mailingPartsField;
            }
            set {
                this.mailingPartsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public LinkReport[] linkReport {
            get {
                return this.linkReportField;
            }
            set {
                this.linkReportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class SendTemplateBean {
        
        private string titleField;
        
        private string externalIDField;
        
        private string subjectField;
        
        private string fromEmailField;
        
        private string fromNameField;
        
        private string toEmailField;
        
        private string toNameField;
        
        private string replyToEmailField;
        
        private string replyToNameField;
        
        private string encodingField;
        
        private string charsetField;
        
        private string[] blockDomainsField;
        
        private string trackTypeField;
        
        private string openTrackTypeField;
        
        private string clickStreamTypeField;
        
        private int[] purgeListsField;
        
        private int[] purgeSuppressionListsField;
        
        private System.Nullable<int> campaignIDField;
        
        private System.Nullable<int> brandIDField;
        
        private System.Nullable<int> replyContentIDField;
        
        private System.Nullable<int> unsubContentIDField;
        
        private System.Nullable<int> footerContentIDField;
        
        private System.Nullable<int> headerContentIDField;
        
        private System.Nullable<int> forwardFriendContentIDField;
        
        private string advertiserNameField;
        
        private string unsubReportsAddressField;
        
        private System.Nullable<int> unsubReportsSizeField;
        
        private bool enabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string toEmail {
            get {
                return this.toEmailField;
            }
            set {
                this.toEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string toName {
            get {
                return this.toNameField;
            }
            set {
                this.toNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string replyToEmail {
            get {
                return this.replyToEmailField;
            }
            set {
                this.replyToEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string replyToName {
            get {
                return this.replyToNameField;
            }
            set {
                this.replyToNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] blockDomains {
            get {
                return this.blockDomainsField;
            }
            set {
                this.blockDomainsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string trackType {
            get {
                return this.trackTypeField;
            }
            set {
                this.trackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string openTrackType {
            get {
                return this.openTrackTypeField;
            }
            set {
                this.openTrackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string clickStreamType {
            get {
                return this.clickStreamTypeField;
            }
            set {
                this.clickStreamTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public int[] purgeLists {
            get {
                return this.purgeListsField;
            }
            set {
                this.purgeListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public int[] purgeSuppressionLists {
            get {
                return this.purgeSuppressionListsField;
            }
            set {
                this.purgeSuppressionListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> campaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> brandID {
            get {
                return this.brandIDField;
            }
            set {
                this.brandIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> replyContentID {
            get {
                return this.replyContentIDField;
            }
            set {
                this.replyContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> unsubContentID {
            get {
                return this.unsubContentIDField;
            }
            set {
                this.unsubContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> footerContentID {
            get {
                return this.footerContentIDField;
            }
            set {
                this.footerContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> headerContentID {
            get {
                return this.headerContentIDField;
            }
            set {
                this.headerContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> forwardFriendContentID {
            get {
                return this.forwardFriendContentIDField;
            }
            set {
                this.forwardFriendContentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string advertiserName {
            get {
                return this.advertiserNameField;
            }
            set {
                this.advertiserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string unsubReportsAddress {
            get {
                return this.unsubReportsAddressField;
            }
            set {
                this.unsubReportsAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> unsubReportsSize {
            get {
                return this.unsubReportsSizeField;
            }
            set {
                this.unsubReportsSizeField = value;
            }
        }
        
        /// <remarks/>
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class List {
        
        private System.Nullable<int> listIDField;
        
        private string listTitleField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> createTimeField;
        
        private string creatorField;
        
        private System.Nullable<bool> populatedField;
        
        private System.Nullable<int> seedListIDField;
        
        private System.Nullable<bool> globalUnsubField;
        
        private System.Nullable<bool> publicSignupField;
        
        private string[] blockDomainsField;
        
        private System.Nullable<bool> countRecipsField;
        
        private System.Nullable<int> categoryIDField;
        
        private string externalIDField;
        
        private string friendlyFromNameField;
        
        private string friendlyTitleField;
        
        private string custom1Field;
        
        private System.Nullable<bool> facebookListField;
        
        private System.Nullable<int> displayOrderField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> listID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string listTitle {
            get {
                return this.listTitleField;
            }
            set {
                this.listTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> populated {
            get {
                return this.populatedField;
            }
            set {
                this.populatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> seedListID {
            get {
                return this.seedListIDField;
            }
            set {
                this.seedListIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> globalUnsub {
            get {
                return this.globalUnsubField;
            }
            set {
                this.globalUnsubField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> publicSignup {
            get {
                return this.publicSignupField;
            }
            set {
                this.publicSignupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] blockDomains {
            get {
                return this.blockDomainsField;
            }
            set {
                this.blockDomainsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> countRecips {
            get {
                return this.countRecipsField;
            }
            set {
                this.countRecipsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> categoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string friendlyFromName {
            get {
                return this.friendlyFromNameField;
            }
            set {
                this.friendlyFromNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string friendlyTitle {
            get {
                return this.friendlyTitleField;
            }
            set {
                this.friendlyTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string custom1 {
            get {
                return this.custom1Field;
            }
            set {
                this.custom1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> facebookList {
            get {
                return this.facebookListField;
            }
            set {
                this.facebookListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> displayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://skylist.com/services/SoapRequestProcessor")]
    public partial class Recipient {
        
        private System.Nullable<int> recipIDField;
        
        private string addressField;
        
        private string externalIDField;
        
        private string protocolField;
        
        private string statusField;
        
        private string commentField;
        
        private System.Nullable<int> importIDField;
        
        private string passwordField;
        
        private string signupMethodField;
        
        private string signupIPField;
        
        private System.Nullable<System.DateTime> sourceSignupDateField;
        
        private string sourceDescriptionField;
        
        private string thirdPartySourceField;
        
        private System.Nullable<System.DateTime> thirdPartySignupDateField;
        
        private System.Nullable<System.DateTime> dateLastClickedField;
        
        private System.Nullable<System.DateTime> dateLastOpenedField;
        
        private System.Nullable<int> clickCountField;
        
        private System.Nullable<int> openCountField;
        
        private System.Nullable<int> numBouncesField;
        
        private string blockCodeField;
        
        private System.Nullable<System.DateTime> dateJoinedField;
        
        private System.Nullable<System.DateTime> dateBounceField;
        
        private System.Nullable<System.DateTime> dateHeldField;
        
        private System.Nullable<System.DateTime> dateUnsubField;
        
        private System.Nullable<System.DateTime> dateOptoutField;
        
        private string[] demographicsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> recipID {
            get {
                return this.recipIDField;
            }
            set {
                this.recipIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string externalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> importID {
            get {
                return this.importIDField;
            }
            set {
                this.importIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string signupMethod {
            get {
                return this.signupMethodField;
            }
            set {
                this.signupMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string signupIP {
            get {
                return this.signupIPField;
            }
            set {
                this.signupIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sourceSignupDate {
            get {
                return this.sourceSignupDateField;
            }
            set {
                this.sourceSignupDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sourceDescription {
            get {
                return this.sourceDescriptionField;
            }
            set {
                this.sourceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string thirdPartySource {
            get {
                return this.thirdPartySourceField;
            }
            set {
                this.thirdPartySourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> thirdPartySignupDate {
            get {
                return this.thirdPartySignupDateField;
            }
            set {
                this.thirdPartySignupDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateLastClicked {
            get {
                return this.dateLastClickedField;
            }
            set {
                this.dateLastClickedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateLastOpened {
            get {
                return this.dateLastOpenedField;
            }
            set {
                this.dateLastOpenedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> clickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> openCount {
            get {
                return this.openCountField;
            }
            set {
                this.openCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> numBounces {
            get {
                return this.numBouncesField;
            }
            set {
                this.numBouncesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string blockCode {
            get {
                return this.blockCodeField;
            }
            set {
                this.blockCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateJoined {
            get {
                return this.dateJoinedField;
            }
            set {
                this.dateJoinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateBounce {
            get {
                return this.dateBounceField;
            }
            set {
                this.dateBounceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateHeld {
            get {
                return this.dateHeldField;
            }
            set {
                this.dateHeldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateUnsub {
            get {
                return this.dateUnsubField;
            }
            set {
                this.dateUnsubField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOptout {
            get {
                return this.dateOptoutField;
            }
            set {
                this.dateOptoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createRecipientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createRecipientAndReturnRecipIDCompletedEventHandler(object sender, createRecipientAndReturnRecipIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRecipientAndReturnRecipIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRecipientAndReturnRecipIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateRecipientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipientCompletedEventHandler(object sender, getRecipientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipientByAddressCompletedEventHandler(object sender, getRecipientByAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipientByAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipientByAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipientByExternalIDCompletedEventHandler(object sender, getRecipientByExternalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipientByExternalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipientByExternalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipientSubscriptionsCompletedEventHandler(object sender, getRecipientSubscriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipientSubscriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipientSubscriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListSubscription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListSubscription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void subscribeToListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void unsubscribeFromListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void globalUnsubscribeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void globalUnsubscribeAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getListCompletedEventHandler(object sender, getListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public List Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((List)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getListsCompletedEventHandler(object sender, getListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public List[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((List[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createSendTemplateCompletedEventHandler(object sender, createSendTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSendTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSendTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void doImportAndSendFromTemplateCompletedEventHandler(object sender, doImportAndSendFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doImportAndSendFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doImportAndSendFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void doImportFromTemplateCompletedEventHandler(object sender, doImportFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doImportFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doImportFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getImportStatusCompletedEventHandler(object sender, getImportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getDetailedMailingReportCompletedEventHandler(object sender, getDetailedMailingReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailedMailingReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailedMailingReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DetailedMailingReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DetailedMailingReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getImportTemplatesCompletedEventHandler(object sender, getImportTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImportTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImportTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IdAndTitle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IdAndTitle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMailingReportSummariesCompletedEventHandler(object sender, getMailingReportSummariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailingReportSummariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMailingReportSummariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SummaryMailingReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryMailingReport[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SummaryCampaignReport[] mailingReportSummaryReturnCamp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryCampaignReport[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMailingReportsCompletedEventHandler(object sender, getMailingReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailingReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMailingReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MailingReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MailingReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getCampaignReportsCompletedEventHandler(object sender, getCampaignReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCampaignReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCampaignReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SummaryCampaignReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryCampaignReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSendTemplateContentCompletedEventHandler(object sender, getSendTemplateContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSendTemplateContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSendTemplateContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSendTemplateDefinitionCompletedEventHandler(object sender, getSendTemplateDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSendTemplateDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSendTemplateDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendTemplateBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendTemplateBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSendTemplatesCompletedEventHandler(object sender, getSendTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSendTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSendTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IdAndTitle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IdAndTitle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getStatisticsCompletedEventHandler(object sender, getStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createFacebookMailingCompletedEventHandler(object sender, createFacebookMailingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFacebookMailingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFacebookMailingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateFacebookMailingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createSMSMailingCompletedEventHandler(object sender, createSMSMailingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSMSMailingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSMSMailingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateSMSMailingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createEmailMailingCompletedEventHandler(object sender, createEmailMailingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmailMailingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmailMailingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateEmailMailingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendTestMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void enableMailingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMailingStatusCompletedEventHandler(object sender, getMailingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMailingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendMessageFromTemplateCompletedEventHandler(object sender, sendMessageFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendMessageFromTemplateWithReferenceNumberCompletedEventHandler(object sender, sendMessageFromTemplateWithReferenceNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageFromTemplateWithReferenceNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageFromTemplateWithReferenceNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventHandler(object sender, sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageFromTemplateWithReferenceNumberAndAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendMessagesFromTemplateCompletedEventHandler(object sender, sendMessagesFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessagesFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessagesFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendEmailMessagesCompletedEventHandler(object sender, sendEmailMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendEmailMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendEmailMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendSMSMessagesCompletedEventHandler(object sender, sendSMSMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMSMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSMSMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateSendTemplateDefinitionCompletedEventHandler(object sender, updateSendTemplateDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSendTemplateDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSendTemplateDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateSendTemplateContentsCompletedEventHandler(object sender, updateSendTemplateContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSendTemplateContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSendTemplateContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipientInfoCompletedEventHandler(object sender, getRecipientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRecipSubscriptionInfoCompletedEventHandler(object sender, getRecipSubscriptionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecipSubscriptionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecipSubscriptionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createContentFolderCompletedEventHandler(object sender, createContentFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createContentFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createContentFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void deleteContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void uploadContentFromSFTPCompletedEventHandler(object sender, uploadContentFromSFTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadContentFromSFTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadContentFromSFTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void uploadContentFromHTTPCompletedEventHandler(object sender, uploadContentFromHTTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadContentFromHTTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadContentFromHTTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getContentUploadStatusCompletedEventHandler(object sender, getContentUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContentUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContentUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void listContentsCompletedEventHandler(object sender, listContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getContentCompletedEventHandler(object sender, getContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Content Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Content)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591